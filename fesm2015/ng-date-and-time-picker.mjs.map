{"version":3,"file":"ng-date-and-time-picker.mjs","sources":["../../../projects/picker/src/lib/date-time/date-time-picker-trigger.directive.ts","../../../projects/picker/src/lib/adapter/date-time-format.class.ts","../../../projects/picker/src/lib/date-time/date-time-picker-intl.service.ts","../../../projects/picker/src/lib/adapter/date-time-adapter.class.ts","../../../projects/picker/src/lib/date-time/calendar-body.component.ts","../../../projects/picker/src/lib/date-time/calendar-body.component.html","../../../projects/picker/src/lib/date-time/calendar-month-view.component.ts","../../../projects/picker/src/lib/date-time/calendar-month-view.component.html","../../../projects/picker/src/lib/date-time/calendar-year-view.component.ts","../../../projects/picker/src/lib/date-time/calendar-year-view.component.html","../../../projects/picker/src/lib/date-time/calendar-multi-year-view.component.ts","../../../projects/picker/src/lib/date-time/calendar-multi-year-view.component.html","../../../projects/picker/src/lib/date-time/calendar.component.ts","../../../projects/picker/src/lib/date-time/calendar.component.html","../../../projects/picker/src/lib/date-time/numberedFixLen.pipe.ts","../../../projects/picker/src/lib/date-time/timer-box.component.ts","../../../projects/picker/src/lib/date-time/timer-box.component.html","../../../projects/picker/src/lib/date-time/timer.component.ts","../../../projects/picker/src/lib/date-time/timer.component.html","../../../projects/picker/src/lib/date-time/date-time-picker.animations.ts","../../../projects/picker/src/lib/date-time/date-time-picker-container.component.ts","../../../projects/picker/src/lib/date-time/date-time-picker-container.component.html","../../../projects/picker/src/lib/date-time/date-time.class.ts","../../../projects/picker/src/lib/dialog/dialog-config.class.ts","../../../projects/picker/src/lib/dialog/dialog-ref.class.ts","../../../projects/picker/src/lib/dialog/dialog-container.component.ts","../../../projects/picker/src/lib/dialog/dialog-container.component.html","../../../projects/picker/src/lib/utils/object.utils.ts","../../../projects/picker/src/lib/dialog/dialog.service.ts","../../../projects/picker/src/lib/date-time/date-time-picker.component.ts","../../../projects/picker/src/lib/date-time/date-time-picker.component.html","../../../projects/picker/src/lib/date-time/date-time-picker-input.directive.ts","../../../projects/picker/src/lib/date-time/date-time-inline.component.ts","../../../projects/picker/src/lib/date-time/date-time-inline.component.html","../../../projects/picker/src/lib/dialog/dialog.module.ts","../../../projects/picker/src/lib/date-time/date-time.module.ts","../../../projects/picker/src/lib/adapter/native/native-date-time-adapter.class.ts","../../../projects/picker/src/lib/adapter/native/native-date-time-format.class.ts","../../../projects/picker/src/lib/adapter/native/native-date-time.module.ts","../../../projects/picker/src/ng-date-and-time-picker.ts"],"sourcesContent":["import {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\nimport { OwlDateTimeComponent } from './date-time-picker.component';\n\n@Directive({\n  selector: '[owlDateTimeTrigger]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '(click)': 'handleClickOnHost($event)',\n    '[class.owl-dt-trigger-disabled]': 'owlDTTriggerDisabledClass'\n  }\n})\nexport class OwlDateTimeTriggerDirective<T>\n  implements OnInit, OnChanges, AfterContentInit, OnDestroy\n{\n  @Input('owlDateTimeTrigger') dtPicker: OwlDateTimeComponent<T>;\n\n  private _disabled: boolean;\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined ? this.dtPicker.disabled : !!this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = value;\n  }\n\n  get owlDTTriggerDisabledClass(): boolean {\n    return this.disabled;\n  }\n\n  private stateChanges = Subscription.EMPTY;\n\n  constructor(protected changeDetector: ChangeDetectorRef) {}\n\n  public ngOnInit(): void {}\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes['datepicker']) {\n      this.watchStateChanges();\n    }\n  }\n\n  public ngAfterContentInit() {\n    this.watchStateChanges();\n  }\n\n  public ngOnDestroy(): void {\n    this.stateChanges.unsubscribe();\n  }\n\n  public handleClickOnHost(event: Event): void {\n    if (this.dtPicker) {\n      this.dtPicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private watchStateChanges(): void {\n    this.stateChanges.unsubscribe();\n\n    const inputDisabled =\n      this.dtPicker && this.dtPicker.dtInput\n        ? this.dtPicker.dtInput.disabledChange\n        : observableOf();\n\n    const pickerDisabled = this.dtPicker ? this.dtPicker.disabledChange : observableOf();\n\n    this.stateChanges = merge([pickerDisabled, inputDisabled]).subscribe(() => {\n      this.changeDetector.markForCheck();\n    });\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface OwlDateTimeFormats {\n  parse: {\n    dateTimeInput: any;\n  };\n  display: {\n    fullInput: any;\n    dateInput: any;\n    timeInput: any;\n    monthYearLabel: any;\n    dateA11yLabel: any;\n    monthYearA11yLabel: any;\n  };\n}\n\n/** InjectionToken for date time picker that can be used to override default format. */\nexport const OWL_DATE_TIME_FORMATS = new InjectionToken<OwlDateTimeFormats>(\n  'owl-date-time-formats'\n);\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class OwlDateTimeIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the up second button (used by screen readers).  */\n  upSecondLabel = 'Add a second';\n\n  /** A label for the down second button (used by screen readers).  */\n  downSecondLabel = 'Minus a second';\n\n  /** A label for the up minute button (used by screen readers).  */\n  upMinuteLabel = 'Add a minute';\n\n  /** A label for the down minute button (used by screen readers).  */\n  downMinuteLabel = 'Minus a minute';\n\n  /** A label for the up hour button (used by screen readers).  */\n  upHourLabel = 'Add a hour';\n\n  /** A label for the down hour button (used by screen readers).  */\n  downHourLabel = 'Minus a hour';\n\n  /** A label for the previous month button (used by screen readers). */\n  prevMonthLabel = 'Previous month';\n\n  /** A label for the next month button (used by screen readers). */\n  nextMonthLabel = 'Next month';\n\n  /** A label for the previous year button (used by screen readers). */\n  prevYearLabel = 'Previous year';\n\n  /** A label for the next year button (used by screen readers). */\n  nextYearLabel = 'Next year';\n\n  /** A label for the previous multi-year button (used by screen readers). */\n  prevMultiYearLabel = 'Previous 21 years';\n\n  /** A label for the next multi-year button (used by screen readers). */\n  nextMultiYearLabel = 'Next 21 years';\n\n  /** A label for the 'switch to month view' button (used by screen readers). */\n  switchToMonthViewLabel = 'Change to month view';\n\n  /** A label for the 'switch to year view' button (used by screen readers). */\n  switchToMultiYearViewLabel = 'Choose month and year';\n\n  /** A label for the cancel button */\n  cancelBtnLabel = 'Cancel';\n\n  /** A label for the set button */\n  setBtnLabel = 'Set';\n\n  /** A label for the range 'from' in picker info */\n  rangeFromLabel = 'From';\n\n  /** A label for the range 'to' in picker info */\n  rangeToLabel = 'To';\n\n  /** A label for the hour12 button (AM) */\n  hour12AMLabel = 'AM';\n\n  /** A label for the hour12 button (PM) */\n  hour12PMLabel = 'PM';\n}\n","import { Observable, Subject } from 'rxjs';\nimport { inject, InjectionToken, LOCALE_ID } from '@angular/core';\n\n/** InjectionToken for date-time picker that can be used to override default locale code. */\nexport const OWL_DATE_TIME_LOCALE = new InjectionToken<string>('OWL_DATE_TIME_LOCALE', {\n  providedIn: 'root',\n  factory: OWL_DATE_TIME_LOCALE_FACTORY\n});\n\n/** @docs-private */\nexport function OWL_DATE_TIME_LOCALE_FACTORY(): string {\n  return inject(LOCALE_ID);\n}\n\n/** Adapts type `T` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateTimeAdapter<T> {\n  /** The locale to use for all dates. */\n  protected locale: string;\n  /** total milliseconds in a day. */\n  protected readonly millisecondsInDay = 86400000;\n  /** total milliseconds in a minute. */\n  protected readonly milliseondsInMinute = 60000;\n\n  protected _localeChanges = new Subject<void>();\n\n  /** A stream that emits when the locale changes. */\n  get localeChanges(): Observable<void> {\n    return this._localeChanges;\n  }\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: T): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: T): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: T): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: T): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: T): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: T): number;\n\n  /**\n   * Gets the hours component of the given date.\n   * @param date The date to extract the hours from.\n   * @returns The hours component.\n   */\n  abstract getHours(date: T): number;\n\n  /**\n   * Gets the minutes component of the given date.\n   * @param date The date to extract the minutes from.\n   * @returns The minutes component.\n   */\n  abstract getMinutes(date: T): number;\n\n  /**\n   * Gets the seconds component of the given date.\n   * @param date The date to extract the seconds from.\n   * @returns The seconds component.\n   */\n  abstract getSeconds(date: T): number;\n\n  /**\n   * Gets the milliseconds component of the given date.\n   * @param date The date to extract the milliseconds from.\n   * @returns The milliseconds component.\n   */\n  abstract getMilliseconds(date: T): number;\n\n  /**\n   * Gets the milliseconds timestamp component of the given date.\n   * @param date The date to extract the milliseconds timestamp from.\n   * @returns The milliseconds timestamp component.\n   */\n  abstract getTime(date: T): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: T): T;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @param hours The hours of the date.\n   * @param minutes The minutes of the date.\n   * @param seconds The seconds of the date.\n   * @param ms The milliseconds of the date.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(\n    year: number,\n    month: number,\n    date: number,\n    hours?: number,\n    minutes?: number,\n    seconds?: number,\n    ms?: number\n  ): T;\n\n  /**\n   * Gets current time.\n   * @returns Current time.\n   */\n  abstract now(): T;\n\n  /**\n   * Parses a date from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date.\n   */\n  abstract parse(value: any, parseFormat: any): T | null;\n\n  /**\n   * Formats a date as a string according to the given format.\n   * @param date The value to format.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The formatted date string.\n   */\n  abstract format(date: T, displayFormat: any): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: T, years: number): T;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: T, months: number): T;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: T, days: number): T;\n\n  /**\n   * Adds the given number of hours to the date.\n   * @param date The date to add hours to.\n   * @param hours The number of hours to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of hours added.\n   */\n  abstract addTimerHours(date: T, hours: number): T;\n\n  /**\n   * Adds the given number of minutes to the date.\n   * @param date The date to add minutes to.\n   * @param minutes The number of minutes to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of minutes added.\n   */\n  abstract addTimerMinutes(date: T, minutes: number): T;\n\n  /**\n   * Adds the given number of seconds to the date.\n   * @param date The date to add seconds to.\n   * @param seconds The number of seconds to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of seconds added.\n   */\n  abstract addTimerSeconds(date: T, seconds: number): T;\n\n  /**\n   * Adds the given number of milliseconds to the date.\n   * @param date The date to add milliseconds to.\n   * @param milliseconds The number of milliseconds to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of milliseconds added.\n   */\n  abstract addTimerMilliseconds(date: T, milliseconds: number): T;\n\n  /**\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n   * This method is used to generate date strings that are compatible with native HTML attributes\n   * such as the `min` or `max` attribute of an `<input>`.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract toIso8601(date: T): string;\n\n  /**\n   * Checks whether the given object is considered a date instance by this DateAdapter.\n   * @param obj The object to check\n   * @returns Whether the object is a date instance.\n   */\n  abstract isDateInstance(obj: any): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   * @param date The date to check.\n   * @returns Whether the date is valid.\n   */\n  abstract isValid(date: T): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   */\n  abstract isValidFormat(value: any, parseFormat: any): boolean;\n\n  /**\n   * Gets date instance that is not valid.\n   * @returns An invalid date.\n   */\n  abstract invalid(): T;\n\n  /**\n   * Get the number of calendar days between the given dates.\n   * If dateLeft is before dateRight, it would return positive value\n   * If dateLeft is after dateRight, it would return negative value\n   */\n  abstract differenceInCalendarDays(dateLeft: T, dateRight: T): number;\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value: any): T | null {\n    if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: string) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: T, second: T): number {\n    return this.getTime(first) - this.getTime(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: T | null, second: T | null): boolean {\n    if (first && second) {\n      const firstValid = this.isValid(first);\n      const secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid === secondValid;\n    }\n    return first === second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: T, min?: T | null, max?: T | null): T {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { SelectMode } from './date-time.class';\nimport { take } from 'rxjs/operators';\n\nexport class CalendarCell {\n  constructor(\n    public value: number,\n    public displayValue: string,\n    public ariaLabel: string,\n    public enabled: boolean,\n    public out: boolean = false,\n    public cellClass: string = ''\n  ) {}\n}\n\n@Component({\n  selector: '[owl-date-time-calendar-body]',\n  exportAs: 'owlDateTimeCalendarBody',\n  templateUrl: './calendar-body.component.html',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.owl-dt-calendar-body]': 'owlDTCalendarBodyClass'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OwlCalendarBodyComponent implements OnInit {\n  /**\n   * The cell number of the active cell in the table.\n   */\n  @Input()\n  activeCell = 0;\n\n  /**\n   * The cells to display in the table.\n   */\n  @Input()\n  rows: CalendarCell[][];\n\n  /**\n   * The number of columns in the table.\n   */\n  @Input()\n  numCols = 7;\n\n  /**\n   * The ratio (width / height) to use for the cells in the table.\n   */\n  @Input()\n  cellRatio = 1;\n\n  /**\n   * The value in the table that corresponds to today.\n   */\n  @Input()\n  todayValue: number;\n\n  /**\n   * The value in the table that is currently selected.\n   */\n  @Input()\n  selectedValues: number[];\n\n  /**\n   * Current picker select mode\n   */\n  @Input()\n  selectMode: SelectMode;\n\n  /**\n   * Emit when a calendar cell is selected\n   */\n  @Output()\n  public readonly select = new EventEmitter<CalendarCell>();\n\n  get owlDTCalendarBodyClass(): boolean {\n    return true;\n  }\n\n  get isInSingleMode(): boolean {\n    return this.selectMode === 'single';\n  }\n\n  get isInRangeMode(): boolean {\n    return (\n      this.selectMode === 'range' ||\n      this.selectMode === 'rangeFrom' ||\n      this.selectMode === 'rangeTo'\n    );\n  }\n\n  constructor(private elmRef: ElementRef, private ngZone: NgZone) {}\n\n  public ngOnInit() {}\n\n  public selectCell(cell: CalendarCell): void {\n    this.select.emit(cell);\n  }\n\n  public isActiveCell(rowIndex: number, colIndex: number): boolean {\n    const cellNumber = rowIndex * this.numCols + colIndex;\n    return cellNumber === this.activeCell;\n  }\n\n  /**\n   * Check if the cell is selected\n   */\n  public isSelected(value: number): boolean {\n    if (!this.selectedValues || this.selectedValues.length === 0) {\n      return false;\n    }\n\n    if (this.isInSingleMode) {\n      return value === this.selectedValues[0];\n    }\n\n    if (this.isInRangeMode) {\n      const fromValue = this.selectedValues[0];\n      const toValue = this.selectedValues[1];\n\n      return value === fromValue || value === toValue;\n    }\n    return false;\n  }\n\n  /**\n   * Check if the cell in the range\n   */\n  public isInRange(value: number): boolean {\n    if (this.isInRangeMode) {\n      const fromValue = this.selectedValues[0];\n      const toValue = this.selectedValues[1];\n\n      if (fromValue !== null && toValue !== null) {\n        return value >= fromValue && value <= toValue;\n      } else {\n        return value === fromValue || value === toValue;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the cell is the range from\n   */\n  public isRangeFrom(value: number): boolean | void {\n    if (this.isInRangeMode) {\n      const fromValue = this.selectedValues[0];\n      return fromValue !== null && value === fromValue;\n    }\n  }\n\n  /**\n   * Check if the cell is the range to\n   */\n  public isRangeTo(value: number): boolean | void {\n    if (this.isInRangeMode) {\n      const toValue = this.selectedValues[1];\n      return toValue !== null && value === toValue;\n    }\n  }\n\n  /**\n   * Focus to a active cell\n   */\n  public focusActiveCell(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.ngZone.onStable\n        .asObservable()\n        .pipe(take(1))\n        .subscribe(() => {\n          this.elmRef.nativeElement.querySelector('.owl-dt-calendar-cell-active').focus();\n        });\n    });\n  }\n}\n","<tr *ngFor=\"let row of rows; let rowIndex = index\" role=\"row\">\n  <td\n    *ngFor=\"let item of row; let colIndex = index\"\n    class=\"owl-dt-calendar-cell {{ item.cellClass }}\"\n    [tabindex]=\"isActiveCell(rowIndex, colIndex) ? 0 : -1\"\n    [class.owl-dt-calendar-cell-active]=\"isActiveCell(rowIndex, colIndex)\"\n    [class.owl-dt-calendar-cell-disabled]=\"!item.enabled\"\n    [class.owl-dt-calendar-cell-in-range]=\"isInRange(item.value)\"\n    [class.owl-dt-calendar-cell-range-from]=\"isRangeFrom(item.value)\"\n    [class.owl-dt-calendar-cell-range-to]=\"isRangeTo(item.value)\"\n    [attr.aria-label]=\"item.ariaLabel\"\n    [attr.aria-disabled]=\"!item.enabled || null\"\n    [style.width.%]=\"100 / numCols\"\n    [style.paddingTop.%]=\"(50 * cellRatio) / numCols\"\n    [style.paddingBottom.%]=\"(50 * cellRatio) / numCols\"\n    (click)=\"selectCell(item)\"\n  >\n    <span\n      class=\"owl-dt-calendar-cell-content\"\n      [ngClass]=\"{\n        'owl-dt-calendar-cell-out': item.out,\n        'owl-dt-calendar-cell-today': item.value === todayValue,\n        'owl-dt-calendar-cell-selected': isSelected(item.value)\n      }\"\n    >\n      {{ item.displayValue }}\n    </span>\n  </td>\n</tr>\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\nimport { DateTimeAdapter } from '../adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from '../adapter/date-time-format.class';\nimport { Subscription } from 'rxjs';\nimport { SelectMode } from './date-time.class';\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW\n} from '@angular/cdk/keycodes';\n\nconst DAYS_PER_WEEK = 7;\nconst WEEKS_PER_VIEW = 6;\n\n@Component({\n  selector: 'owl-date-time-month-view',\n  exportAs: 'owlYearView',\n  templateUrl: './calendar-month-view.component.html',\n  host: {\n    '[class.owl-dt-calendar-view]': 'owlDTCalendarView'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OwlMonthViewComponent<T> implements OnInit, AfterContentInit, OnDestroy {\n  /**\n   * Whether to hide dates in other months at the start or end of the current month.\n   */\n  @Input()\n  hideOtherMonths = false;\n\n  /**\n   * Define the first day of a week\n   * Sunday: 0 - Saturday: 6\n   */\n  private _firstDayOfWeek = this.dateTimeAdapter.getFirstDayOfWeek();\n  @Input()\n  get firstDayOfWeek(): number {\n    return this._firstDayOfWeek;\n  }\n\n  set firstDayOfWeek(value: number) {\n    if (value >= 0 && value <= 6 && value !== this._firstDayOfWeek) {\n      this._firstDayOfWeek = value;\n      this.isDefaultFirstDayOfWeek = false;\n\n      if (this.initiated) {\n        this.generateWeekDays();\n        this.generateCalendar();\n        this.cdRef.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * The select mode of the picker;\n   */\n  private _selectMode: SelectMode = 'single';\n  @Input()\n  get selectMode(): SelectMode {\n    return this._selectMode;\n  }\n\n  set selectMode(val: SelectMode) {\n    this._selectMode = val;\n    if (this.initiated) {\n      this.generateCalendar();\n      this.cdRef.markForCheck();\n    }\n  }\n\n  /** The currently selected date. */\n  private _selected: T | null;\n  @Input()\n  get selected(): T | null {\n    return this._selected;\n  }\n\n  set selected(value: T | null) {\n    const oldSelected = this._selected;\n    value = this.dateTimeAdapter.deserialize(value);\n    this._selected = this.getValidDate(value);\n\n    if (!this.dateTimeAdapter.sameDate(oldSelected, this._selected)) {\n      this.setSelectedDates();\n    }\n  }\n\n  private _selecteds: T[] = [];\n  @Input()\n  get selecteds(): T[] {\n    return this._selecteds;\n  }\n\n  set selecteds(values: T[]) {\n    this._selecteds = values.map(v => {\n      v = this.dateTimeAdapter.deserialize(v);\n      return this.getValidDate(v);\n    });\n    this.setSelectedDates();\n  }\n\n  private _pickerMoment: T;\n  @Input()\n  get pickerMoment() {\n    return this._pickerMoment;\n  }\n\n  set pickerMoment(value: T) {\n    const oldMoment = this._pickerMoment;\n    value = this.dateTimeAdapter.deserialize(value);\n    this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n\n    this.firstDateOfMonth = this.dateTimeAdapter.createDate(\n      this.dateTimeAdapter.getYear(this._pickerMoment),\n      this.dateTimeAdapter.getMonth(this._pickerMoment),\n      1\n    );\n\n    if (!this.isSameMonth(oldMoment, this._pickerMoment) && this.initiated) {\n      this.generateCalendar();\n    }\n  }\n\n  /**\n   * A function used to filter which dates are selectable\n   */\n  private _dateFilter: (date: T) => boolean;\n  @Input()\n  get dateFilter() {\n    return this._dateFilter;\n  }\n\n  set dateFilter(filter: (date: T) => boolean) {\n    this._dateFilter = filter;\n    if (this.initiated) {\n      this.generateCalendar();\n      this.cdRef.markForCheck();\n    }\n  }\n\n  /** The minimum selectable date. */\n  private _minDate: T | null;\n  @Input()\n  get minDate(): T | null {\n    return this._minDate;\n  }\n\n  set minDate(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this._minDate = this.getValidDate(value);\n    if (this.initiated) {\n      this.generateCalendar();\n      this.cdRef.markForCheck();\n    }\n  }\n\n  /** The maximum selectable date. */\n  private _maxDate: T | null;\n  @Input()\n  get maxDate(): T | null {\n    return this._maxDate;\n  }\n\n  set maxDate(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this._maxDate = this.getValidDate(value);\n\n    if (this.initiated) {\n      this.generateCalendar();\n      this.cdRef.markForCheck();\n    }\n  }\n\n  private _weekdays: Array<{ long: string; short: string; narrow: string }>;\n  get weekdays() {\n    return this._weekdays;\n  }\n\n  private _days: CalendarCell[][];\n  get days() {\n    return this._days;\n  }\n\n  get activeCell(): number | null {\n    if (this.pickerMoment) {\n      return this.dateTimeAdapter.getDate(this.pickerMoment) + this.firstRowOffset - 1;\n    }\n    return null;\n  }\n\n  get isInSingleMode(): boolean {\n    return this.selectMode === 'single';\n  }\n\n  get isInRangeMode(): boolean {\n    return (\n      this.selectMode === 'range' ||\n      this.selectMode === 'rangeFrom' ||\n      this.selectMode === 'rangeTo'\n    );\n  }\n\n  private firstDateOfMonth: T;\n\n  private isDefaultFirstDayOfWeek = true;\n\n  private localeSub: Subscription = Subscription.EMPTY;\n\n  private initiated = false;\n\n  private dateNames: string[];\n\n  /**\n   * The date of the month that today falls on.\n   */\n  public todayDate: number | null;\n\n  /**\n   * An array to hold all selectedDates' value\n   * the value is the day number in current month\n   */\n  public selectedDates: number[] = [];\n\n  // the index of cell that contains the first date of the month\n  public firstRowOffset: number;\n\n  /**\n   * Callback to invoke when a new date is selected\n   */\n  @Output()\n  readonly selectedChange = new EventEmitter<T | null>();\n\n  /**\n   * Callback to invoke when any date is selected.\n   */\n  @Output()\n  readonly userSelection = new EventEmitter<void>();\n\n  /** Emits when any date is activated. */\n  @Output()\n  readonly pickerMomentChange: EventEmitter<T> = new EventEmitter<T>();\n\n  /** The body of calendar table */\n  @ViewChild(OwlCalendarBodyComponent, { static: true })\n  calendarBodyElm: OwlCalendarBodyComponent;\n\n  get owlDTCalendarView(): boolean {\n    return true;\n  }\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\n    @Optional()\n    @Inject(OWL_DATE_TIME_FORMATS)\n    private dateTimeFormats: OwlDateTimeFormats\n  ) {}\n\n  public ngOnInit() {\n    this.generateWeekDays();\n\n    this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(locale => {\n      this.generateWeekDays();\n      this.generateCalendar();\n      this.firstDayOfWeek = this.isDefaultFirstDayOfWeek\n        ? this.dateTimeAdapter.getFirstDayOfWeek()\n        : this.firstDayOfWeek;\n      this.cdRef.markForCheck();\n    });\n  }\n\n  public ngAfterContentInit(): void {\n    this.generateCalendar();\n    this.initiated = true;\n  }\n\n  public ngOnDestroy(): void {\n    this.localeSub.unsubscribe();\n  }\n\n  /**\n   * Handle a calendarCell selected\n   */\n  public selectCalendarCell(cell: CalendarCell): void {\n    // Cases in which the date would not be selected\n    // 1, the calendar cell is NOT enabled (is NOT valid)\n    // 2, the selected date is NOT in current picker's month and the hideOtherMonths is enabled\n    if (!cell.enabled || (this.hideOtherMonths && cell.out)) {\n      return;\n    }\n\n    this.selectDate(cell.value);\n  }\n\n  /**\n   * Handle a new date selected\n   */\n  private selectDate(date: number): void {\n    const daysDiff = date - 1;\n    const selected = this.dateTimeAdapter.addCalendarDays(this.firstDateOfMonth, daysDiff);\n\n    this.selectedChange.emit(selected);\n    this.userSelection.emit();\n  }\n\n  /**\n   * Handle keydown event on calendar body\n   */\n  public handleCalendarKeydown(event: KeyboardEvent): void {\n    let moment;\n    switch (event.keyCode) {\n      // minus 1 day\n      case LEFT_ARROW:\n        moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, -1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // add 1 day\n      case RIGHT_ARROW:\n        moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // minus 1 week\n      case UP_ARROW:\n        moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, -7);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // add 1 week\n      case DOWN_ARROW:\n        moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 7);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // move to first day of current month\n      case HOME:\n        moment = this.dateTimeAdapter.addCalendarDays(\n          this.pickerMoment,\n          1 - this.dateTimeAdapter.getDate(this.pickerMoment)\n        );\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // move to last day of current month\n      case END:\n        moment = this.dateTimeAdapter.addCalendarDays(\n          this.pickerMoment,\n          this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment) -\n            this.dateTimeAdapter.getDate(this.pickerMoment)\n        );\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // minus 1 month (or 1 year)\n      case PAGE_UP:\n        moment = event.altKey\n          ? this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1)\n          : this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // add 1 month (or 1 year)\n      case PAGE_DOWN:\n        moment = event.altKey\n          ? this.dateTimeAdapter.addCalendarYears(this.pickerMoment, 1)\n          : this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // select the pickerMoment\n      case ENTER:\n        if (!this.dateFilter || this.dateFilter(this.pickerMoment)) {\n          this.selectDate(this.dateTimeAdapter.getDate(this.pickerMoment));\n        }\n        break;\n      default:\n        return;\n    }\n\n    this.focusActiveCell();\n    event.preventDefault();\n  }\n\n  /**\n   * Generate the calendar weekdays array\n   */\n  private generateWeekDays(): void {\n    const longWeekdays = this.dateTimeAdapter.getDayOfWeekNames('long');\n    const shortWeekdays = this.dateTimeAdapter.getDayOfWeekNames('short');\n    const narrowWeekdays = this.dateTimeAdapter.getDayOfWeekNames('narrow');\n    const firstDayOfWeek = this.firstDayOfWeek;\n\n    const weekdays = longWeekdays.map((long, i) => {\n      return { long, short: shortWeekdays[i], narrow: narrowWeekdays[i] };\n    });\n\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n    this.dateNames = this.dateTimeAdapter.getDateNames();\n\n    return;\n  }\n\n  /**\n   * Generate the calendar days array\n   */\n  private generateCalendar(): void {\n    if (!this.pickerMoment) {\n      return;\n    }\n\n    this.todayDate = null;\n\n    // the first weekday of the month\n    const startWeekdayOfMonth = this.dateTimeAdapter.getDayOfWeek(this.firstDateOfMonth);\n    const firstDayOfWeek = this.firstDayOfWeek;\n\n    // the amount of days from the first date of the month\n    // if it is < 0, it means the date is in previous month\n    let daysDiff = 0 - ((startWeekdayOfMonth + (DAYS_PER_WEEK - firstDayOfWeek)) % DAYS_PER_WEEK);\n\n    // the index of cell that contains the first date of the month\n    this.firstRowOffset = Math.abs(daysDiff);\n\n    this._days = [];\n    for (let i = 0; i < WEEKS_PER_VIEW; i++) {\n      const week = [];\n      for (let j = 0; j < DAYS_PER_WEEK; j++) {\n        const date = this.dateTimeAdapter.addCalendarDays(this.firstDateOfMonth, daysDiff);\n        const dateCell = this.createDateCell(date, daysDiff);\n\n        // check if the date is today\n        if (this.dateTimeAdapter.sameDate(this.dateTimeAdapter.now(), date)) {\n          this.todayDate = daysDiff + 1;\n        }\n\n        week.push(dateCell);\n        daysDiff += 1;\n      }\n      this._days.push(week);\n    }\n\n    this.setSelectedDates();\n  }\n\n  /**\n   * Creates CalendarCell for days.\n   */\n  private createDateCell(date: T, daysDiff: number): CalendarCell {\n    // total days of the month\n    const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment);\n    const dateNum = this.dateTimeAdapter.getDate(date);\n    // const dateName = this.dateNames[dateNum - 1];\n    const dateName = dateNum.toString();\n    const ariaLabel = this.dateTimeAdapter.format(date, this.dateTimeFormats.display.dateA11yLabel);\n\n    // check if the date if selectable\n    const enabled = this.isDateEnabled(date);\n\n    // check if date is not in current month\n    const dayValue = daysDiff + 1;\n    const out = dayValue < 1 || dayValue > daysInMonth;\n    const cellClass = 'owl-dt-day-' + this.dateTimeAdapter.getDayOfWeek(date);\n\n    return new CalendarCell(dayValue, dateName, ariaLabel, enabled, out, cellClass);\n  }\n\n  /**\n   * Check if the date is valid\n   */\n  private isDateEnabled(date: T): boolean {\n    return (\n      !!date &&\n      (!this.dateFilter || this.dateFilter(date)) &&\n      (!this.minDate || this.dateTimeAdapter.compareDate(date, this.minDate) >= 0) &&\n      (!this.maxDate || this.dateTimeAdapter.compareDate(date, this.maxDate) <= 0)\n    );\n  }\n\n  /**\n   * Get a valid date object\n   */\n  private getValidDate(obj: any): T | null {\n    return this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)\n      ? obj\n      : null;\n  }\n\n  /**\n   * Check if the give dates are none-null and in the same month\n   */\n  public isSameMonth(dateLeft: T, dateRight: T): boolean {\n    return !!(\n      dateLeft &&\n      dateRight &&\n      this.dateTimeAdapter.isValid(dateLeft) &&\n      this.dateTimeAdapter.isValid(dateRight) &&\n      this.dateTimeAdapter.getYear(dateLeft) === this.dateTimeAdapter.getYear(dateRight) &&\n      this.dateTimeAdapter.getMonth(dateLeft) === this.dateTimeAdapter.getMonth(dateRight)\n    );\n  }\n\n  /**\n   * Set the selectedDates value.\n   * In single mode, it has only one value which represent the selected date\n   * In range mode, it would has two values, one for the fromValue and the other for the toValue\n   */\n  private setSelectedDates(): void {\n    this.selectedDates = [];\n\n    if (!this.firstDateOfMonth) {\n      return;\n    }\n\n    if (this.isInSingleMode && this.selected) {\n      const dayDiff = this.dateTimeAdapter.differenceInCalendarDays(\n        this.selected,\n        this.firstDateOfMonth\n      );\n      this.selectedDates[0] = dayDiff + 1;\n      return;\n    }\n\n    if (this.isInRangeMode && this.selecteds) {\n      this.selectedDates = this.selecteds.map(selected => {\n        if (this.dateTimeAdapter.isValid(selected)) {\n          const dayDiff = this.dateTimeAdapter.differenceInCalendarDays(\n            selected,\n            this.firstDateOfMonth\n          );\n          return dayDiff + 1;\n        } else {\n          return null;\n        }\n      });\n    }\n  }\n\n  private focusActiveCell() {\n    this.calendarBodyElm.focusActiveCell();\n  }\n}\n","<table\n  class=\"owl-dt-calendar-table owl-dt-calendar-month-table\"\n  [class.owl-dt-calendar-only-current-month]=\"hideOtherMonths\"\n>\n  <thead class=\"owl-dt-calendar-header\">\n    <tr class=\"owl-dt-weekdays\">\n      <th\n        *ngFor=\"let weekday of weekdays\"\n        [attr.aria-label]=\"weekday.long\"\n        class=\"owl-dt-weekday\"\n        scope=\"col\"\n      >\n        <span>{{ weekday.short }}</span>\n      </th>\n    </tr>\n    <tr>\n      <th class=\"owl-dt-calendar-table-divider\" aria-hidden=\"true\" colspan=\"7\"></th>\n    </tr>\n  </thead>\n  <tbody\n    owl-date-time-calendar-body\n    role=\"grid\"\n    [rows]=\"days\"\n    [todayValue]=\"todayDate\"\n    [selectedValues]=\"selectedDates\"\n    [selectMode]=\"selectMode\"\n    [activeCell]=\"activeCell\"\n    (keydown)=\"handleCalendarKeydown($event)\"\n    (select)=\"selectCalendarCell($event)\"\n  ></tbody>\n</table>\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\nimport { DateTimeAdapter } from '../adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from '../adapter/date-time-format.class';\nimport { Subscription } from 'rxjs';\nimport { SelectMode } from './date-time.class';\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW\n} from '@angular/cdk/keycodes';\n\nconst MONTHS_PER_YEAR = 12;\nconst MONTHS_PER_ROW = 3;\n\n@Component({\n  selector: 'owl-date-time-year-view',\n  exportAs: 'owlMonthView',\n  templateUrl: './calendar-year-view.component.html',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.owl-dt-calendar-view]': 'owlDTCalendarView'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OwlYearViewComponent<T> implements OnInit, AfterContentInit, OnDestroy {\n  /**\n   * The select mode of the picker;\n   */\n  private _selectMode: SelectMode = 'single';\n  @Input()\n  get selectMode(): SelectMode {\n    return this._selectMode;\n  }\n\n  set selectMode(val: SelectMode) {\n    this._selectMode = val;\n    if (this.initiated) {\n      this.generateMonthList();\n      this.cdRef.markForCheck();\n    }\n  }\n\n  /** The currently selected date. */\n  private _selected: T | null;\n  @Input()\n  get selected(): T | null {\n    return this._selected;\n  }\n\n  set selected(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this._selected = this.getValidDate(value);\n    this.setSelectedMonths();\n  }\n\n  private _selecteds: T[] = [];\n  @Input()\n  get selecteds(): T[] {\n    return this._selecteds;\n  }\n\n  set selecteds(values: T[]) {\n    this._selecteds = [];\n    values.forEach(value => {\n      const deserializedValue = this.dateTimeAdapter.deserialize(value);\n      this._selecteds.push(this.getValidDate(deserializedValue));\n    });\n\n    this.setSelectedMonths();\n  }\n\n  private _pickerMoment: T | null;\n  @Input()\n  get pickerMoment() {\n    return this._pickerMoment;\n  }\n\n  set pickerMoment(value: T) {\n    const oldMoment = this._pickerMoment;\n    value = this.dateTimeAdapter.deserialize(value);\n    this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n\n    if (!this.hasSameYear(oldMoment, this._pickerMoment) && this.initiated) {\n      this.generateMonthList();\n    }\n  }\n\n  /**\n   * A function used to filter which dates are selectable\n   */\n  private _dateFilter: (date: T) => boolean;\n  @Input()\n  get dateFilter() {\n    return this._dateFilter;\n  }\n\n  set dateFilter(filter: (date: T) => boolean) {\n    this._dateFilter = filter;\n    if (this.initiated) {\n      this.generateMonthList();\n    }\n  }\n\n  /** The minimum selectable date. */\n  private _minDate: T | null;\n  @Input()\n  get minDate(): T | null {\n    return this._minDate;\n  }\n\n  set minDate(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this._minDate = this.getValidDate(value);\n    if (this.initiated) {\n      this.generateMonthList();\n    }\n  }\n\n  /** The maximum selectable date. */\n  private _maxDate: T | null;\n  @Input()\n  get maxDate(): T | null {\n    return this._maxDate;\n  }\n\n  set maxDate(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this._maxDate = this.getValidDate(value);\n    if (this.initiated) {\n      this.generateMonthList();\n    }\n  }\n\n  private readonly monthNames: string[];\n\n  private _months: CalendarCell[][];\n  get months() {\n    return this._months;\n  }\n\n  get activeCell(): number | null {\n    if (this._pickerMoment) {\n      return this.dateTimeAdapter.getMonth(this._pickerMoment);\n    }\n    return null;\n  }\n\n  get isInSingleMode(): boolean {\n    return this.selectMode === 'single';\n  }\n\n  get isInRangeMode(): boolean {\n    return (\n      this.selectMode === 'range' ||\n      this.selectMode === 'rangeFrom' ||\n      this.selectMode === 'rangeTo'\n    );\n  }\n\n  private localeSub: Subscription = Subscription.EMPTY;\n\n  private initiated = false;\n\n  public todayMonth: number | null;\n\n  /**\n   * An array to hold all selectedDates' month value\n   * the value is the month number in current year\n   */\n  public selectedMonths: number[] = [];\n\n  /**\n   * Callback to invoke when a new month is selected\n   */\n  @Output()\n  readonly change = new EventEmitter<T>();\n\n  /**\n   * Emits the selected year. This doesn't imply a change on the selected date\n   */\n  @Output()\n  readonly monthSelected = new EventEmitter<T>();\n\n  /** Emits when any date is activated. */\n  @Output()\n  readonly pickerMomentChange: EventEmitter<T> = new EventEmitter<T>();\n\n  /** Emits when use keyboard enter to select a calendar cell */\n  @Output()\n  readonly keyboardEnter: EventEmitter<any> = new EventEmitter<any>();\n\n  /** The body of calendar table */\n  @ViewChild(OwlCalendarBodyComponent, { static: true })\n  calendarBodyElm: OwlCalendarBodyComponent;\n\n  get owlDTCalendarView(): boolean {\n    return true;\n  }\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\n    @Optional()\n    @Inject(OWL_DATE_TIME_FORMATS)\n    private dateTimeFormats: OwlDateTimeFormats\n  ) {\n    this.monthNames = this.dateTimeAdapter.getMonthNames('short');\n  }\n\n  public ngOnInit() {\n    this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(() => {\n      this.generateMonthList();\n      this.cdRef.markForCheck();\n    });\n  }\n\n  public ngAfterContentInit(): void {\n    this.generateMonthList();\n    this.initiated = true;\n  }\n\n  public ngOnDestroy(): void {\n    this.localeSub.unsubscribe();\n  }\n\n  /**\n   * Handle a calendarCell selected\n   */\n  public selectCalendarCell(cell: CalendarCell): void {\n    this.selectMonth(cell.value);\n  }\n\n  /**\n   * Handle a new month selected\n   */\n  private selectMonth(month: number): void {\n    const firstDateOfMonth = this.dateTimeAdapter.createDate(\n      this.dateTimeAdapter.getYear(this.pickerMoment),\n      month,\n      1\n    );\n\n    this.monthSelected.emit(firstDateOfMonth);\n\n    const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(firstDateOfMonth);\n    const result = this.dateTimeAdapter.createDate(\n      this.dateTimeAdapter.getYear(this.pickerMoment),\n      month,\n      Math.min(daysInMonth, this.dateTimeAdapter.getDate(this.pickerMoment)),\n      this.dateTimeAdapter.getHours(this.pickerMoment),\n      this.dateTimeAdapter.getMinutes(this.pickerMoment),\n      this.dateTimeAdapter.getSeconds(this.pickerMoment)\n    );\n\n    this.change.emit(result);\n  }\n\n  /**\n   * Handle keydown event on calendar body\n   */\n  public handleCalendarKeydown(event: KeyboardEvent): void {\n    let moment;\n    switch (event.keyCode) {\n      // minus 1 month\n      case LEFT_ARROW:\n        moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // add 1 month\n      case RIGHT_ARROW:\n        moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // minus 3 months\n      case UP_ARROW:\n        moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -3);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // add 3 months\n      case DOWN_ARROW:\n        moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 3);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // move to first month of current year\n      case HOME:\n        moment = this.dateTimeAdapter.addCalendarMonths(\n          this.pickerMoment,\n          -this.dateTimeAdapter.getMonth(this.pickerMoment)\n        );\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // move to last month of current year\n      case END:\n        moment = this.dateTimeAdapter.addCalendarMonths(\n          this.pickerMoment,\n          11 - this.dateTimeAdapter.getMonth(this.pickerMoment)\n        );\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // minus 1 year (or 10 year)\n      case PAGE_UP:\n        moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? -10 : -1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // add 1 year (or 10 year)\n      case PAGE_DOWN:\n        moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? 10 : 1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // Select current month\n      case ENTER:\n        this.selectMonth(this.dateTimeAdapter.getMonth(this.pickerMoment));\n        this.keyboardEnter.emit();\n        break;\n      default:\n        return;\n    }\n\n    this.focusActiveCell();\n    event.preventDefault();\n  }\n\n  /**\n   * Generate the calendar month list\n   */\n  private generateMonthList(): void {\n    if (!this.pickerMoment) {\n      return;\n    }\n\n    this.setSelectedMonths();\n    this.todayMonth = this.getMonthInCurrentYear(this.dateTimeAdapter.now());\n\n    this._months = [];\n    for (let i = 0; i < MONTHS_PER_YEAR / MONTHS_PER_ROW; i++) {\n      const row = [];\n\n      for (let j = 0; j < MONTHS_PER_ROW; j++) {\n        const month = j + i * MONTHS_PER_ROW;\n        const monthCell = this.createMonthCell(month);\n        row.push(monthCell);\n      }\n\n      this._months.push(row);\n    }\n\n    return;\n  }\n\n  /**\n   * Creates an CalendarCell for the given month.\n   */\n  private createMonthCell(month: number): CalendarCell {\n    const startDateOfMonth = this.dateTimeAdapter.createDate(\n      this.dateTimeAdapter.getYear(this.pickerMoment),\n      month,\n      1\n    );\n    const ariaLabel = this.dateTimeAdapter.format(\n      startDateOfMonth,\n      this.dateTimeFormats.display.monthYearA11yLabel\n    );\n    const cellClass = 'owl-dt-month-' + month;\n    return new CalendarCell(\n      month,\n      this.monthNames[month],\n      ariaLabel,\n      this.isMonthEnabled(month),\n      false,\n      cellClass\n    );\n  }\n\n  /**\n   * Check if the given month is enable\n   */\n  private isMonthEnabled(month: number): boolean {\n    const firstDateOfMonth = this.dateTimeAdapter.createDate(\n      this.dateTimeAdapter.getYear(this.pickerMoment),\n      month,\n      1\n    );\n\n    // If any date in the month is selectable,\n    // we count the month as enable\n    for (\n      let date = firstDateOfMonth;\n      this.dateTimeAdapter.getMonth(date) === month;\n      date = this.dateTimeAdapter.addCalendarDays(date, 1)\n    ) {\n      if (\n        !!date &&\n        (!this.dateFilter || this.dateFilter(date)) &&\n        (!this.minDate || this.dateTimeAdapter.compareDate(date, this.minDate) >= 0) &&\n        (!this.maxDate || this.dateTimeAdapter.compareDate(date, this.maxDate) <= 0)\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private getMonthInCurrentYear(date: T | null): number {\n    if (this.getValidDate(date) && this.getValidDate(this._pickerMoment)) {\n      const result =\n        this.dateTimeAdapter.getYear(date) - this.dateTimeAdapter.getYear(this.pickerMoment);\n\n      // < 0 : the given date's year is before pickerMoment's year, we return -1 as selected month value.\n      // > 0 : the given date's year is after pickerMoment's year, we return 12 as selected month value.\n      // 0 : the give date's year is same as the pickerMoment's year, we return the actual month value.\n      if (result < 0) {\n        return -1;\n      } else if (result > 0) {\n        return 12;\n      } else {\n        return this.dateTimeAdapter.getMonth(date);\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Set the selectedMonths value\n   * In single mode, it has only one value which represent the month the selected date in\n   * In range mode, it would has two values, one for the month the fromValue in and the other for the month the toValue in\n   */\n  private setSelectedMonths(): void {\n    this.selectedMonths = [];\n    if (this.isInSingleMode && this.selected) {\n      this.selectedMonths[0] = this.getMonthInCurrentYear(this.selected);\n    }\n\n    if (this.isInRangeMode && this.selecteds) {\n      this.selectedMonths[0] = this.getMonthInCurrentYear(this.selecteds[0]);\n      this.selectedMonths[1] = this.getMonthInCurrentYear(this.selecteds[1]);\n    }\n  }\n\n  /**\n   * Check the given dates are in the same year\n   */\n  private hasSameYear(dateLeft: T, dateRight: T) {\n    return !!(\n      dateLeft &&\n      dateRight &&\n      this.dateTimeAdapter.getYear(dateLeft) === this.dateTimeAdapter.getYear(dateRight)\n    );\n  }\n\n  /**\n   * Get a valid date object\n   */\n  private getValidDate(obj: any): T | null {\n    return this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)\n      ? obj\n      : null;\n  }\n\n  private focusActiveCell() {\n    this.calendarBodyElm.focusActiveCell();\n  }\n}\n","<table class=\"owl-dt-calendar-table owl-dt-calendar-year-table\">\n  <thead class=\"owl-dt-calendar-header\">\n    <tr>\n      <th class=\"owl-dt-calendar-table-divider\" aria-hidden=\"true\" colspan=\"3\"></th>\n    </tr>\n  </thead>\n  <tbody\n    owl-date-time-calendar-body\n    role=\"grid\"\n    [rows]=\"months\"\n    [numCols]=\"3\"\n    [cellRatio]=\"3 / 7\"\n    [activeCell]=\"activeCell\"\n    [todayValue]=\"todayMonth\"\n    [selectedValues]=\"selectedMonths\"\n    [selectMode]=\"selectMode\"\n    (keydown)=\"handleCalendarKeydown($event)\"\n    (select)=\"selectCalendarCell($event)\"\n  ></tbody>\n</table>\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { DateTimeAdapter } from '../adapter/date-time-adapter.class';\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\nimport { SelectMode } from './date-time.class';\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW\n} from '@angular/cdk/keycodes';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\n\nexport const YEARS_PER_ROW = 3;\nexport const YEAR_ROWS = 7;\n\n@Component({\n  selector: 'owl-date-time-multi-year-view',\n  templateUrl: './calendar-multi-year-view.component.html',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.owl-dt-calendar-view]': 'owlDTCalendarView',\n    '[class.owl-dt-calendar-multi-year-view]': 'owlDTCalendarMultiYearView'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OwlMultiYearViewComponent<T> implements OnInit, AfterContentInit {\n  /**\n   * The select mode of the picker;\n   */\n  private _selectMode: SelectMode = 'single';\n  @Input()\n  get selectMode(): SelectMode {\n    return this._selectMode;\n  }\n\n  set selectMode(val: SelectMode) {\n    this._selectMode = val;\n    if (this.initiated) {\n      this.setSelectedYears();\n      this.cdRef.markForCheck();\n    }\n  }\n\n  /** The currently selected date. */\n  private _selected: T | null;\n  @Input()\n  get selected(): T | null {\n    return this._selected;\n  }\n\n  set selected(value: T | null) {\n    const oldSelected = this._selected;\n    value = this.dateTimeAdapter.deserialize(value);\n    this._selected = this.getValidDate(value);\n\n    if (!this.dateTimeAdapter.sameDate(oldSelected, this._selected)) {\n      this.setSelectedYears();\n    }\n  }\n\n  private _selecteds: T[] = [];\n  @Input()\n  get selecteds(): T[] {\n    return this._selecteds;\n  }\n\n  set selecteds(values: T[]) {\n    this._selecteds = values.map(v => {\n      v = this.dateTimeAdapter.deserialize(v);\n      return this.getValidDate(v);\n    });\n    this.setSelectedYears();\n  }\n\n  private _pickerMoment: T | null;\n  @Input()\n  get pickerMoment() {\n    return this._pickerMoment;\n  }\n\n  set pickerMoment(value: T) {\n    const oldMoment = this._pickerMoment;\n    value = this.dateTimeAdapter.deserialize(value);\n    this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n\n    if (oldMoment && this._pickerMoment && !this.isSameYearList(oldMoment, this._pickerMoment)) {\n      this.generateYearList();\n    }\n  }\n\n  /**\n   * A function used to filter which dates are selectable\n   */\n  private _dateFilter: (date: T) => boolean;\n  @Input()\n  get dateFilter() {\n    return this._dateFilter;\n  }\n\n  set dateFilter(filter: (date: T) => boolean) {\n    this._dateFilter = filter;\n    if (this.initiated) {\n      this.generateYearList();\n    }\n  }\n\n  /** The minimum selectable date. */\n  private _minDate: T | null;\n  @Input()\n  get minDate(): T | null {\n    return this._minDate;\n  }\n\n  set minDate(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this._minDate = this.getValidDate(value);\n    if (this.initiated) {\n      this.generateYearList();\n    }\n  }\n\n  /** The maximum selectable date. */\n  private _maxDate: T | null;\n  @Input()\n  get maxDate(): T | null {\n    return this._maxDate;\n  }\n\n  set maxDate(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this._maxDate = this.getValidDate(value);\n    if (this.initiated) {\n      this.generateYearList();\n    }\n  }\n\n  private _todayYear: number;\n  get todayYear(): number {\n    return this._todayYear;\n  }\n\n  private _years: CalendarCell[][];\n  get years() {\n    return this._years;\n  }\n\n  private _selectedYears: number[];\n  get selectedYears(): number[] {\n    return this._selectedYears;\n  }\n\n  private initiated = false;\n\n  get isInSingleMode(): boolean {\n    return this.selectMode === 'single';\n  }\n\n  get isInRangeMode(): boolean {\n    return (\n      this.selectMode === 'range' ||\n      this.selectMode === 'rangeFrom' ||\n      this.selectMode === 'rangeTo'\n    );\n  }\n\n  get activeCell(): number | null {\n    if (this._pickerMoment) {\n      return this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS);\n    }\n    return null;\n  }\n\n  get tableHeader(): string | void {\n    if (this._years && this._years.length > 0) {\n      return `${this._years[0][0].displayValue} - ${\n        this._years[YEAR_ROWS - 1][YEARS_PER_ROW - 1].displayValue\n      }`;\n    }\n  }\n\n  get prevButtonLabel(): string {\n    return this.pickerIntl.prevMultiYearLabel;\n  }\n\n  get nextButtonLabel(): string {\n    return this.pickerIntl.nextMultiYearLabel;\n  }\n\n  /**\n   * Callback to invoke when a new month is selected\n   */\n  @Output() readonly change = new EventEmitter<T>();\n\n  /**\n   * Emits the selected year. This doesn't imply a change on the selected date\n   */\n  @Output() readonly yearSelected = new EventEmitter<T>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly pickerMomentChange: EventEmitter<T> = new EventEmitter<T>();\n\n  /** Emits when use keyboard enter to select a calendar cell */\n  @Output() readonly keyboardEnter: EventEmitter<any> = new EventEmitter<any>();\n\n  /** The body of calendar table */\n  @ViewChild(OwlCalendarBodyComponent, { static: true })\n  calendarBodyElm: OwlCalendarBodyComponent;\n\n  get owlDTCalendarView(): boolean {\n    return true;\n  }\n\n  get owlDTCalendarMultiYearView(): boolean {\n    return true;\n  }\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private pickerIntl: OwlDateTimeIntl,\n    @Optional() private dateTimeAdapter: DateTimeAdapter<T>\n  ) {}\n\n  public ngOnInit() {}\n\n  public ngAfterContentInit(): void {\n    this._todayYear = this.dateTimeAdapter.getYear(this.dateTimeAdapter.now());\n    this.generateYearList();\n    this.initiated = true;\n  }\n\n  /**\n   * Handle a calendarCell selected\n   */\n  public selectCalendarCell(cell: CalendarCell): void {\n    this.selectYear(cell.value);\n  }\n\n  private selectYear(year: number): void {\n    this.yearSelected.emit(this.dateTimeAdapter.createDate(year, 0, 1));\n    const firstDateOfMonth = this.dateTimeAdapter.createDate(\n      year,\n      this.dateTimeAdapter.getMonth(this.pickerMoment),\n      1\n    );\n    const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(firstDateOfMonth);\n    const selected = this.dateTimeAdapter.createDate(\n      year,\n      this.dateTimeAdapter.getMonth(this.pickerMoment),\n      Math.min(daysInMonth, this.dateTimeAdapter.getDate(this.pickerMoment)),\n      this.dateTimeAdapter.getHours(this.pickerMoment),\n      this.dateTimeAdapter.getMinutes(this.pickerMoment),\n      this.dateTimeAdapter.getSeconds(this.pickerMoment)\n    );\n\n    this.change.emit(selected);\n  }\n\n  /**\n   * Generate the previous year list\n   */\n  public prevYearList(event: any): void {\n    this._pickerMoment = this.dateTimeAdapter.addCalendarYears(\n      this.pickerMoment,\n      -1 * YEAR_ROWS * YEARS_PER_ROW\n    );\n    this.generateYearList();\n    event.preventDefault();\n  }\n\n  /**\n   * Generate the next year list\n   */\n  public nextYearList(event: any): void {\n    this._pickerMoment = this.dateTimeAdapter.addCalendarYears(\n      this.pickerMoment,\n      YEAR_ROWS * YEARS_PER_ROW\n    );\n    this.generateYearList();\n    event.preventDefault();\n  }\n\n  public generateYearList(): void {\n    this._years = [];\n\n    const pickerMomentYear = this.dateTimeAdapter.getYear(this._pickerMoment);\n    const offset = pickerMomentYear % (YEARS_PER_ROW * YEAR_ROWS);\n\n    for (let i = 0; i < YEAR_ROWS; i++) {\n      const row = [];\n\n      for (let j = 0; j < YEARS_PER_ROW; j++) {\n        const year = pickerMomentYear - offset + (j + i * YEARS_PER_ROW);\n        const yearCell = this.createYearCell(year);\n        row.push(yearCell);\n      }\n\n      this._years.push(row);\n    }\n\n    return;\n  }\n\n  /** Whether the previous period button is enabled. */\n  public previousEnabled(): boolean {\n    if (!this.minDate) {\n      return true;\n    }\n    return !this.minDate || !this.isSameYearList(this._pickerMoment, this.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  public nextEnabled(): boolean {\n    return !this.maxDate || !this.isSameYearList(this._pickerMoment, this.maxDate);\n  }\n\n  public handleCalendarKeydown(event: KeyboardEvent): void {\n    let moment;\n    switch (event.keyCode) {\n      // minus 1 year\n      case LEFT_ARROW:\n        moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // add 1 year\n      case RIGHT_ARROW:\n        moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, 1);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // minus 3 years\n      case UP_ARROW:\n        moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -1 * YEARS_PER_ROW);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // add 3 years\n      case DOWN_ARROW:\n        moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, YEARS_PER_ROW);\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // go to the first year of the year page\n      case HOME:\n        moment = this.dateTimeAdapter.addCalendarYears(\n          this._pickerMoment,\n          -this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS)\n        );\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // go to the last year of the year page\n      case END:\n        moment = this.dateTimeAdapter.addCalendarYears(\n          this._pickerMoment,\n          YEARS_PER_ROW * YEAR_ROWS -\n            (this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS)) -\n            1\n        );\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // minus 1 year page (or 10 year pages)\n      case PAGE_UP:\n        moment = this.dateTimeAdapter.addCalendarYears(\n          this.pickerMoment,\n          event.altKey ? -10 * (YEARS_PER_ROW * YEAR_ROWS) : -1 * (YEARS_PER_ROW * YEAR_ROWS)\n        );\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      // add 1 year page (or 10 year pages)\n      case PAGE_DOWN:\n        moment = this.dateTimeAdapter.addCalendarYears(\n          this.pickerMoment,\n          event.altKey ? 10 * (YEARS_PER_ROW * YEAR_ROWS) : YEARS_PER_ROW * YEAR_ROWS\n        );\n        this.pickerMomentChange.emit(moment);\n        break;\n\n      case ENTER:\n        this.selectYear(this.dateTimeAdapter.getYear(this._pickerMoment));\n        this.keyboardEnter.emit();\n        break;\n\n      default:\n        return;\n    }\n\n    this.focusActiveCell();\n    event.preventDefault();\n  }\n\n  /**\n   * Creates an CalendarCell for the given year.\n   */\n  private createYearCell(year: number): CalendarCell {\n    const startDateOfYear = this.dateTimeAdapter.createDate(year, 0, 1);\n    const ariaLabel = this.dateTimeAdapter.getYearName(startDateOfYear);\n    const cellClass = 'owl-dt-year-' + year;\n    return new CalendarCell(\n      year,\n      year.toString(),\n      ariaLabel,\n      this.isYearEnabled(year),\n      false,\n      cellClass\n    );\n  }\n\n  private setSelectedYears(): void {\n    this._selectedYears = [];\n\n    if (this.isInSingleMode && this.selected) {\n      this._selectedYears[0] = this.dateTimeAdapter.getYear(this.selected);\n    }\n\n    if (this.isInRangeMode && this.selecteds) {\n      this._selectedYears = this.selecteds.map(selected => {\n        if (this.dateTimeAdapter.isValid(selected)) {\n          return this.dateTimeAdapter.getYear(selected);\n        } else {\n          return null;\n        }\n      });\n    }\n  }\n\n  /** Whether the given year is enabled. */\n  private isYearEnabled(year: number) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (\n      year === undefined ||\n      year === null ||\n      (this.maxDate && year > this.dateTimeAdapter.getYear(this.maxDate)) ||\n      (this.minDate && year < this.dateTimeAdapter.getYear(this.minDate))\n    ) {\n      return false;\n    }\n\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfYear = this.dateTimeAdapter.createDate(year, 0, 1);\n\n    // If any date in the year is enabled count the year as enabled.\n    for (\n      let date = firstOfYear;\n      this.dateTimeAdapter.getYear(date) === year;\n      date = this.dateTimeAdapter.addCalendarDays(date, 1)\n    ) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private isSameYearList(date1: T, date2: T): boolean {\n    return (\n      Math.floor(this.dateTimeAdapter.getYear(date1) / (YEARS_PER_ROW * YEAR_ROWS)) ===\n      Math.floor(this.dateTimeAdapter.getYear(date2) / (YEARS_PER_ROW * YEAR_ROWS))\n    );\n  }\n\n  /**\n   * Get a valid date object\n   */\n  private getValidDate(obj: any): T | null {\n    return this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)\n      ? obj\n      : null;\n  }\n\n  private focusActiveCell() {\n    this.calendarBodyElm.focusActiveCell();\n  }\n}\n","<button\n  class=\"owl-dt-control-button owl-dt-control-arrow-button\"\n  [disabled]=\"!previousEnabled()\"\n  [attr.aria-label]=\"prevButtonLabel\"\n  type=\"button\"\n  tabindex=\"0\"\n  (click)=\"prevYearList($event)\"\n>\n  <span class=\"owl-dt-control-button-content\" tabindex=\"-1\">\n    <!-- <editor-fold desc=\"SVG Arrow Left\"> -->\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      version=\"1.1\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 250.738 250.738\"\n      style=\"enable-background: new 0 0 250.738 250.738\"\n      xml:space=\"preserve\"\n      width=\"100%\"\n      height=\"100%\"\n    >\n      <path\n        style=\"fill-rule: evenodd; clip-rule: evenodd\"\n        d=\"M96.633,125.369l95.053-94.533c7.101-7.055,7.101-18.492,0-25.546   c-7.1-7.054-18.613-7.054-25.714,0L58.989,111.689c-3.784,3.759-5.487,8.759-5.238,13.68c-0.249,4.922,1.454,9.921,5.238,13.681   l106.983,106.398c7.101,7.055,18.613,7.055,25.714,0c7.101-7.054,7.101-18.491,0-25.544L96.633,125.369z\"\n      />\n    </svg>\n    <!-- </editor-fold> -->\n  </span>\n</button>\n<table class=\"owl-dt-calendar-table owl-dt-calendar-multi-year-table\">\n  <thead class=\"owl-dt-calendar-header\">\n    <tr>\n      <th colspan=\"3\">{{ tableHeader }}</th>\n    </tr>\n  </thead>\n  <tbody\n    owl-date-time-calendar-body\n    role=\"grid\"\n    [rows]=\"years\"\n    [numCols]=\"3\"\n    [cellRatio]=\"3 / 7\"\n    [activeCell]=\"activeCell\"\n    [todayValue]=\"todayYear\"\n    [selectedValues]=\"selectedYears\"\n    [selectMode]=\"selectMode\"\n    (keydown)=\"handleCalendarKeydown($event)\"\n    (select)=\"selectCalendarCell($event)\"\n  ></tbody>\n</table>\n<button\n  class=\"owl-dt-control-button owl-dt-control-arrow-button\"\n  [disabled]=\"!nextEnabled()\"\n  [attr.aria-label]=\"nextButtonLabel\"\n  type=\"button\"\n  tabindex=\"0\"\n  (click)=\"nextYearList($event)\"\n>\n  <span class=\"owl-dt-control-button-content\" tabindex=\"-1\">\n    <!-- <editor-fold desc=\"SVG Arrow Right\"> -->\n    <svg\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 250.738 250.738\"\n      style=\"enable-background: new 0 0 250.738 250.738\"\n      xml:space=\"preserve\"\n    >\n      <path\n        style=\"fill-rule: evenodd; clip-rule: evenodd\"\n        d=\"M191.75,111.689L84.766,5.291c-7.1-7.055-18.613-7.055-25.713,0\n                c-7.101,7.054-7.101,18.49,0,25.544l95.053,94.534l-95.053,94.533c-7.101,7.054-7.101,18.491,0,25.545\n                c7.1,7.054,18.613,7.054,25.713,0L191.75,139.05c3.784-3.759,5.487-8.759,5.238-13.681\n                C197.237,120.447,195.534,115.448,191.75,111.689z\"\n      />\n    </svg>\n    <!-- </editor-fold> -->\n  </span>\n</button>\n","import {\n  AfterContentInit,\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output\n} from '@angular/core';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\nimport { DateTimeAdapter } from '../adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from '../adapter/date-time-format.class';\nimport { SelectMode } from './date-time.class';\nimport { take } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'owl-date-time-calendar',\n  exportAs: 'owlDateTimeCalendar',\n  templateUrl: './calendar.component.html',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.owl-dt-calendar]': 'owlDTCalendarClass'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OwlCalendarComponent<T>\n  implements OnInit, AfterContentInit, AfterViewChecked, OnDestroy\n{\n  /**\n   * Date filter for the month and year view\n   */\n  @Input()\n  dateFilter: ((date: T) => boolean) | undefined;\n\n  /**\n   * Set the first day of week\n   */\n  @Input()\n  firstDayOfWeek: number;\n\n  /** The minimum selectable date. */\n  private _minDate: T | null;\n  @Input()\n  get minDate(): T | null {\n    return this._minDate;\n  }\n\n  set minDate(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    value = this.getValidDate(value);\n\n    this._minDate = value\n      ? this.dateTimeAdapter.createDate(\n          this.dateTimeAdapter.getYear(value),\n          this.dateTimeAdapter.getMonth(value),\n          this.dateTimeAdapter.getDate(value)\n        )\n      : null;\n  }\n\n  /** The maximum selectable date. */\n  private _maxDate: T | null;\n  @Input()\n  get maxDate(): T | null {\n    return this._maxDate;\n  }\n\n  set maxDate(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    value = this.getValidDate(value);\n\n    this._maxDate = value\n      ? this.dateTimeAdapter.createDate(\n          this.dateTimeAdapter.getYear(value),\n          this.dateTimeAdapter.getMonth(value),\n          this.dateTimeAdapter.getDate(value)\n        )\n      : null;\n  }\n\n  /** The current picker moment */\n  private _pickerMoment: T;\n  @Input()\n  get pickerMoment() {\n    return this._pickerMoment;\n  }\n\n  set pickerMoment(value: T) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n  }\n\n  @Input()\n  selectMode: SelectMode;\n\n  /** The currently selected moment. */\n  private _selected: T | null;\n  @Input()\n  get selected(): T | null {\n    return this._selected;\n  }\n\n  set selected(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this._selected = this.getValidDate(value);\n  }\n\n  private _selecteds: T[] = [];\n  @Input()\n  get selecteds(): T[] {\n    return this._selecteds;\n  }\n\n  set selecteds(values: T[]) {\n    this._selecteds = values.map(v => {\n      v = this.dateTimeAdapter.deserialize(v);\n      return this.getValidDate(v);\n    });\n  }\n\n  /**\n   * The view that the calendar should start in.\n   */\n  @Input()\n  startView: 'month' | 'year' | 'multi-years' = 'month';\n\n  /**\n   * Whether to hide dates in other months at the start or end of the current month.\n   */\n  @Input()\n  hideOtherMonths: boolean;\n\n  /** Emits when the currently picker moment changes. */\n  @Output()\n  pickerMomentChange = new EventEmitter<T>();\n\n  /** Emits when the currently selected date changes. */\n  @Output()\n  selectedChange = new EventEmitter<T>();\n\n  /** Emits when any date is selected. */\n  @Output()\n  userSelection = new EventEmitter<void>();\n\n  /**\n   * Emits the selected year. This doesn't imply a change on the selected date\n   */\n  @Output()\n  readonly yearSelected = new EventEmitter<T>();\n\n  /**\n   * Emits the selected month. This doesn't imply a change on the selected date\n   */\n  @Output()\n  readonly monthSelected = new EventEmitter<T>();\n\n  get periodButtonText(): string {\n    return this.isMonthView\n      ? this.dateTimeAdapter.format(this.pickerMoment, this.dateTimeFormats.display.monthYearLabel)\n      : this.dateTimeAdapter.getYearName(this.pickerMoment);\n  }\n\n  get periodButtonLabel(): string {\n    return this.isMonthView\n      ? this.pickerIntl.switchToMultiYearViewLabel\n      : this.pickerIntl.switchToMonthViewLabel;\n  }\n\n  get prevButtonLabel(): string {\n    if (this._currentView === 'month') {\n      return this.pickerIntl.prevMonthLabel;\n    } else if (this._currentView === 'year') {\n      return this.pickerIntl.prevYearLabel;\n    } else {\n      return null;\n    }\n  }\n\n  get nextButtonLabel(): string {\n    if (this._currentView === 'month') {\n      return this.pickerIntl.nextMonthLabel;\n    } else if (this._currentView === 'year') {\n      return this.pickerIntl.nextYearLabel;\n    } else {\n      return null;\n    }\n  }\n\n  private _currentView: 'month' | 'year' | 'multi-years';\n  get currentView(): 'month' | 'year' | 'multi-years' {\n    return this._currentView;\n  }\n\n  set currentView(view: 'month' | 'year' | 'multi-years') {\n    this._currentView = view;\n    this.moveFocusOnNextTick = true;\n  }\n\n  get isInSingleMode(): boolean {\n    return this.selectMode === 'single';\n  }\n\n  get isInRangeMode(): boolean {\n    return (\n      this.selectMode === 'range' ||\n      this.selectMode === 'rangeFrom' ||\n      this.selectMode === 'rangeTo'\n    );\n  }\n\n  get showControlArrows(): boolean {\n    return this._currentView !== 'multi-years';\n  }\n\n  get isMonthView() {\n    return this._currentView === 'month';\n  }\n\n  /**\n   * Date filter for the month and year view\n   */\n  public dateFilterForViews = (date: T) => {\n    return (\n      !!date &&\n      (!this.dateFilter || this.dateFilter(date)) &&\n      (!this.minDate || this.dateTimeAdapter.compareDate(date, this.minDate) >= 0) &&\n      (!this.maxDate || this.dateTimeAdapter.compareDate(date, this.maxDate) <= 0)\n    );\n  };\n\n  /**\n   * Bind class 'owl-dt-calendar' to host\n   */\n  get owlDTCalendarClass(): boolean {\n    return true;\n  }\n\n  private intlChangesSub = Subscription.EMPTY;\n\n  /**\n   * Used for scheduling that focus should be moved to the active cell on the next tick.\n   * We need to schedule it, rather than do it immediately, because we have to wait\n   * for Angular to re-evaluate the view children.\n   */\n  private moveFocusOnNextTick = false;\n\n  constructor(\n    private elmRef: ElementRef,\n    private pickerIntl: OwlDateTimeIntl,\n    private ngZone: NgZone,\n    private cdRef: ChangeDetectorRef,\n    @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\n    @Optional()\n    @Inject(OWL_DATE_TIME_FORMATS)\n    private dateTimeFormats: OwlDateTimeFormats\n  ) {\n    this.intlChangesSub = this.pickerIntl.changes.subscribe(() => {\n      this.cdRef.markForCheck();\n    });\n  }\n\n  public ngOnInit() {}\n\n  public ngAfterContentInit(): void {\n    this._currentView = this.startView;\n  }\n\n  public ngAfterViewChecked() {\n    if (this.moveFocusOnNextTick) {\n      this.moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.intlChangesSub.unsubscribe();\n  }\n\n  /**\n   * Toggle between month view and year view\n   */\n  public toggleViews(): void {\n    this.currentView = this._currentView === 'month' ? 'multi-years' : 'month';\n  }\n\n  /**\n   * Handles user clicks on the previous button.\n   */\n  public previousClicked(): void {\n    this.pickerMoment = this.isMonthView\n      ? this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1)\n      : this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1);\n\n    this.pickerMomentChange.emit(this.pickerMoment);\n  }\n\n  /**\n   * Handles user clicks on the next button.\n   */\n  public nextClicked(): void {\n    this.pickerMoment = this.isMonthView\n      ? this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1)\n      : this.dateTimeAdapter.addCalendarYears(this.pickerMoment, 1);\n\n    this.pickerMomentChange.emit(this.pickerMoment);\n  }\n\n  public dateSelected(date: T): void {\n    if (!this.dateFilterForViews(date)) {\n      return;\n    }\n\n    this.selectedChange.emit(date);\n  }\n\n  /**\n   * Change the pickerMoment value and switch to a specific view\n   */\n  public goToDateInView(date: T, view: 'month' | 'year' | 'multi-years'): void {\n    this.handlePickerMomentChange(date);\n    this.currentView = view;\n    return;\n  }\n\n  /**\n   * Change the pickerMoment value\n   */\n  public handlePickerMomentChange(date: T): void {\n    this.pickerMoment = this.dateTimeAdapter.clampDate(date, this.minDate, this.maxDate);\n    this.pickerMomentChange.emit(this.pickerMoment);\n    return;\n  }\n\n  public userSelected(): void {\n    this.userSelection.emit();\n  }\n\n  /**\n   * Whether the previous period button is enabled.\n   */\n  public prevButtonEnabled(): boolean {\n    return !this.minDate || !this.isSameView(this.pickerMoment, this.minDate);\n  }\n\n  /**\n   * Whether the next period button is enabled.\n   */\n  public nextButtonEnabled(): boolean {\n    return !this.maxDate || !this.isSameView(this.pickerMoment, this.maxDate);\n  }\n\n  /**\n   * Focus to the host element\n   */\n  public focusActiveCell() {\n    this.ngZone.runOutsideAngular(() => {\n      this.ngZone.onStable\n        .asObservable()\n        .pipe(take(1))\n        .subscribe(() => {\n          this.elmRef.nativeElement.querySelector('.owl-dt-calendar-cell-active').focus();\n        });\n    });\n  }\n\n  public selectYearInMultiYearView(normalizedYear: T): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  public selectMonthInYearView(normalizedMonth: T): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /**\n   * Whether the two dates represent the same view in the current view mode (month or year).\n   */\n  private isSameView(date1: T, date2: T): boolean {\n    if (this._currentView === 'month') {\n      return !!(\n        date1 &&\n        date2 &&\n        this.dateTimeAdapter.getYear(date1) === this.dateTimeAdapter.getYear(date2) &&\n        this.dateTimeAdapter.getMonth(date1) === this.dateTimeAdapter.getMonth(date2)\n      );\n    } else if (this._currentView === 'year') {\n      return !!(\n        date1 &&\n        date2 &&\n        this.dateTimeAdapter.getYear(date1) === this.dateTimeAdapter.getYear(date2)\n      );\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Get a valid date object\n   */\n  private getValidDate(obj: any): T | null {\n    return this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)\n      ? obj\n      : null;\n  }\n}\n","<div class=\"owl-dt-calendar-control\">\n  <!-- focus when keyboard tab (http://kizu.ru/en/blog/keyboard-only-focus/#x) -->\n  <button\n    class=\"owl-dt-control owl-dt-control-button owl-dt-control-arrow-button\"\n    type=\"button\"\n    tabindex=\"0\"\n    [style.visibility]=\"showControlArrows ? 'visible' : 'hidden'\"\n    [disabled]=\"!prevButtonEnabled()\"\n    [attr.aria-label]=\"prevButtonLabel\"\n    (click)=\"previousClicked()\"\n  >\n    <span class=\"owl-dt-control-content owl-dt-control-button-content\" tabindex=\"-1\">\n      <!-- <editor-fold desc=\"SVG Arrow Left\"> -->\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        version=\"1.1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 250.738 250.738\"\n        style=\"enable-background: new 0 0 250.738 250.738\"\n        xml:space=\"preserve\"\n        width=\"100%\"\n        height=\"100%\"\n      >\n        <path\n          style=\"fill-rule: evenodd; clip-rule: evenodd\"\n          d=\"M96.633,125.369l95.053-94.533c7.101-7.055,7.101-18.492,0-25.546   c-7.1-7.054-18.613-7.054-25.714,0L58.989,111.689c-3.784,3.759-5.487,8.759-5.238,13.68c-0.249,4.922,1.454,9.921,5.238,13.681   l106.983,106.398c7.101,7.055,18.613,7.055,25.714,0c7.101-7.054,7.101-18.491,0-25.544L96.633,125.369z\"\n        />\n      </svg>\n      <!-- </editor-fold> -->\n    </span>\n  </button>\n  <div class=\"owl-dt-calendar-control-content\">\n    <button\n      class=\"owl-dt-control owl-dt-control-button owl-dt-control-period-button\"\n      type=\"button\"\n      tabindex=\"0\"\n      [attr.aria-label]=\"periodButtonLabel\"\n      (click)=\"toggleViews()\"\n    >\n      <span class=\"owl-dt-control-content owl-dt-control-button-content\" tabindex=\"-1\">\n        {{ periodButtonText }}\n\n        <span\n          class=\"owl-dt-control-button-arrow\"\n          [style.transform]=\"'rotate(' + (isMonthView ? 0 : 180) + 'deg)'\"\n        >\n          <!-- <editor-fold desc=\"SVG Arrow\"> -->\n          <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"50%\"\n            height=\"50%\"\n            viewBox=\"0 0 292.362 292.362\"\n            style=\"enable-background: new 0 0 292.362 292.362\"\n            xml:space=\"preserve\"\n          >\n            <g>\n              <path\n                d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\n                                C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\n                                s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"\n              />\n            </g>\n          </svg>\n          <!-- </editor-fold> -->\n        </span>\n      </span>\n    </button>\n  </div>\n  <button\n    class=\"owl-dt-control owl-dt-control-button owl-dt-control-arrow-button\"\n    type=\"button\"\n    tabindex=\"0\"\n    [style.visibility]=\"showControlArrows ? 'visible' : 'hidden'\"\n    [disabled]=\"!nextButtonEnabled()\"\n    [attr.aria-label]=\"nextButtonLabel\"\n    (click)=\"nextClicked()\"\n  >\n    <span class=\"owl-dt-control-content owl-dt-control-button-content\" tabindex=\"-1\">\n      <!-- <editor-fold desc=\"SVG Arrow Right\"> -->\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 250.738 250.738\"\n        style=\"enable-background: new 0 0 250.738 250.738\"\n        xml:space=\"preserve\"\n      >\n        <path\n          style=\"fill-rule: evenodd; clip-rule: evenodd\"\n          d=\"M191.75,111.689L84.766,5.291c-7.1-7.055-18.613-7.055-25.713,0\n                    c-7.101,7.054-7.101,18.49,0,25.544l95.053,94.534l-95.053,94.533c-7.101,7.054-7.101,18.491,0,25.545\n                    c7.1,7.054,18.613,7.054,25.713,0L191.75,139.05c3.784-3.759,5.487-8.759,5.238-13.681\n                    C197.237,120.447,195.534,115.448,191.75,111.689z\"\n        />\n      </svg>\n      <!-- </editor-fold> -->\n    </span>\n  </button>\n</div>\n<div class=\"owl-dt-calendar-main\" cdkMonitorSubtreeFocus [ngSwitch]=\"currentView\" tabindex=\"-1\">\n  <owl-date-time-month-view\n    *ngSwitchCase=\"'month'\"\n    [pickerMoment]=\"pickerMoment\"\n    [firstDayOfWeek]=\"firstDayOfWeek\"\n    [selected]=\"selected\"\n    [selecteds]=\"selecteds\"\n    [selectMode]=\"selectMode\"\n    [minDate]=\"minDate\"\n    [maxDate]=\"maxDate\"\n    [dateFilter]=\"dateFilter\"\n    [hideOtherMonths]=\"hideOtherMonths\"\n    (pickerMomentChange)=\"handlePickerMomentChange($event)\"\n    (selectedChange)=\"dateSelected($event)\"\n    (userSelection)=\"userSelected()\"\n  ></owl-date-time-month-view>\n\n  <owl-date-time-year-view\n    *ngSwitchCase=\"'year'\"\n    [pickerMoment]=\"pickerMoment\"\n    [selected]=\"selected\"\n    [selecteds]=\"selecteds\"\n    [selectMode]=\"selectMode\"\n    [minDate]=\"minDate\"\n    [maxDate]=\"maxDate\"\n    [dateFilter]=\"dateFilter\"\n    (keyboardEnter)=\"focusActiveCell()\"\n    (pickerMomentChange)=\"handlePickerMomentChange($event)\"\n    (monthSelected)=\"selectMonthInYearView($event)\"\n    (change)=\"goToDateInView($event, 'month')\"\n  ></owl-date-time-year-view>\n\n  <owl-date-time-multi-year-view\n    *ngSwitchCase=\"'multi-years'\"\n    [pickerMoment]=\"pickerMoment\"\n    [selected]=\"selected\"\n    [selecteds]=\"selecteds\"\n    [selectMode]=\"selectMode\"\n    [minDate]=\"minDate\"\n    [maxDate]=\"maxDate\"\n    [dateFilter]=\"dateFilter\"\n    (keyboardEnter)=\"focusActiveCell()\"\n    (pickerMomentChange)=\"handlePickerMomentChange($event)\"\n    (yearSelected)=\"selectYearInMultiYearView($event)\"\n    (change)=\"goToDateInView($event, 'year')\"\n  ></owl-date-time-multi-year-view>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numberFixedLen'\n})\nexport class NumberFixedLenPipe implements PipeTransform {\n  transform(num: number, len: number): string | number {\n    const number = Math.floor(num);\n    const length = Math.floor(len);\n\n    if (num === null || isNaN(number) || isNaN(length)) {\n      return num;\n    }\n\n    let numString = number.toString();\n\n    while (numString.length < length) {\n      numString = '0' + numString;\n    }\n\n    return numString;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  exportAs: 'owlDateTimeTimerBox',\n  selector: 'owl-date-time-timer-box',\n  templateUrl: './timer-box.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.owl-dt-timer-box]': 'owlDTTimerBoxClass'\n  }\n})\nexport class OwlTimerBoxComponent implements OnInit, OnDestroy {\n  @Input() showDivider = false;\n\n  @Input() upBtnAriaLabel: string;\n\n  @Input() upBtnDisabled: boolean;\n\n  @Input() downBtnAriaLabel: string;\n\n  @Input() downBtnDisabled: boolean;\n\n  /**\n   * Value would be displayed in the box\n   * If it is null, the box would display [value]\n   */\n  @Input() boxValue: number;\n\n  @Input() value: number;\n\n  @Input() min: number;\n\n  @Input() max: number;\n\n  @Input() step = 1;\n\n  @Input() inputLabel: string;\n\n  @Output() valueChange = new EventEmitter<number>();\n\n  @Output() inputChange = new EventEmitter<number>();\n\n  private inputStream = new Subject<string>();\n\n  private inputStreamSub = Subscription.EMPTY;\n\n  constructor() {}\n\n  get displayValue(): number {\n    return this.boxValue || this.value;\n  }\n\n  get owlDTTimerBoxClass(): boolean {\n    return true;\n  }\n\n  public ngOnInit() {\n    this.inputStreamSub = this.inputStream.pipe(debounceTime(500)).subscribe((val: string) => {\n      if (val) {\n        const inputValue = coerceNumberProperty(val, 0);\n        this.updateValueViaInput(inputValue);\n      }\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this.inputStreamSub.unsubscribe();\n  }\n\n  public upBtnClicked(): void {\n    let newValue = this.value + this.step;\n    if (newValue > this.max) {\n      newValue = this.min;\n    }\n    this.updateValue(newValue);\n  }\n\n  public downBtnClicked(): void {\n    let newValue = this.value - this.step;\n    if (newValue < this.min) {\n      newValue = this.max;\n    }\n    this.updateValue(newValue);\n  }\n\n  public handleInputChange(value: string): void {\n    this.inputStream.next(value);\n  }\n\n  public focusOut(value: string): void {\n    if (value) {\n      const inputValue = coerceNumberProperty(value, 0);\n      this.updateValueViaInput(inputValue);\n    }\n  }\n\n  public handleWheelChange(event: WheelEvent) {\n    const deltaY = event.deltaY;\n    if (deltaY > 0 && !this.upBtnDisabled) {\n      this.downBtnClicked();\n    } else if (deltaY < 0 && !this.downBtnDisabled) {\n      this.upBtnClicked();\n    }\n  }\n\n  private updateValue(value: number): void {\n    this.valueChange.emit(value);\n  }\n\n  private updateValueViaInput(value: number): void {\n    if (value > this.max || value < this.min) {\n      return;\n    }\n    this.inputChange.emit(value);\n  }\n}\n","<div *ngIf=\"showDivider\" class=\"owl-dt-timer-divider\" aria-hidden=\"true\"></div>\n<button\n  class=\"owl-dt-control-button owl-dt-control-arrow-button\"\n  type=\"button\"\n  tabindex=\"-1\"\n  [disabled]=\"upBtnDisabled\"\n  [attr.aria-label]=\"upBtnAriaLabel\"\n  (click)=\"upBtnClicked()\"\n>\n  <span class=\"owl-dt-control-button-content\" tabindex=\"-1\">\n    <!-- <editor-fold desc=\"SVG Arrow Up\"> -->\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      version=\"1.1\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 451.847 451.846\"\n      style=\"enable-background: new 0 0 451.847 451.846\"\n      xml:space=\"preserve\"\n      width=\"100%\"\n      height=\"100%\"\n    >\n      <path\n        d=\"M248.292,106.406l194.281,194.29c12.365,12.359,12.365,32.391,0,44.744c-12.354,12.354-32.391,12.354-44.744,0\n                        L225.923,173.529L54.018,345.44c-12.36,12.354-32.395,12.354-44.748,0c-12.359-12.354-12.359-32.391,0-44.75L203.554,106.4\n                        c6.18-6.174,14.271-9.259,22.369-9.259C234.018,97.141,242.115,100.232,248.292,106.406z\"\n      />\n    </svg>\n    <!-- </editor-fold> -->\n  </span>\n</button>\n<label class=\"owl-dt-timer-content\">\n  <input\n    class=\"owl-dt-timer-input\"\n    maxlength=\"2\"\n    [value]=\"displayValue | numberFixedLen: 2\"\n    (wheel)=\"handleWheelChange($event)\"\n    (keydown.arrowUp)=\"!upBtnDisabled && upBtnClicked()\"\n    (keydown.arrowDown)=\"!downBtnAriaLabel && downBtnClicked()\"\n    (input)=\"handleInputChange(valueInput.value)\"\n    (focusout)=\"focusOut(valueInput.value)\"\n    #valueInput\n  />\n  <span class=\"owl-hidden-accessible\">{{ inputLabel }}</span>\n</label>\n<button\n  class=\"owl-dt-control-button owl-dt-control-arrow-button\"\n  type=\"button\"\n  tabindex=\"-1\"\n  [disabled]=\"downBtnDisabled\"\n  [attr.aria-label]=\"downBtnAriaLabel\"\n  (click)=\"downBtnClicked()\"\n>\n  <span class=\"owl-dt-control-button-content\" tabindex=\"-1\">\n    <!-- <editor-fold desc=\"SVG Arrow Down\"> -->\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      version=\"1.1\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 451.847 451.846\"\n      style=\"enable-background: new 0 0 451.847 451.846\"\n      xml:space=\"preserve\"\n      width=\"100%\"\n      height=\"100%\"\n    >\n      <path\n        d=\"M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751\n                        c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0\n                        c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z\"\n      />\n    </svg>\n    <!-- </editor-fold> -->\n  </span>\n</button>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnInit,\n  Optional,\n  Output\n} from '@angular/core';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\nimport { DateTimeAdapter } from '../adapter/date-time-adapter.class';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  exportAs: 'owlDateTimeTimer',\n  selector: 'owl-date-time-timer',\n  templateUrl: './timer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.owl-dt-timer]': 'owlDTTimerClass',\n    '[attr.tabindex]': 'owlDTTimeTabIndex'\n  }\n})\nexport class OwlTimerComponent<T> implements OnInit {\n  /** The current picker moment */\n  private _pickerMoment: T;\n  @Input()\n  get pickerMoment() {\n    return this._pickerMoment;\n  }\n\n  set pickerMoment(value: T) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n  }\n\n  /** The minimum selectable date time. */\n  private _minDateTime: T | null;\n  @Input()\n  get minDateTime(): T | null {\n    return this._minDateTime;\n  }\n\n  set minDateTime(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this._minDateTime = this.getValidDate(value);\n  }\n\n  /** The maximum selectable date time. */\n  private _maxDateTime: T | null;\n  @Input()\n  get maxDateTime(): T | null {\n    return this._maxDateTime;\n  }\n\n  set maxDateTime(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this._maxDateTime = this.getValidDate(value);\n  }\n\n  private isPM = false; // a flag indicates the current timer moment is in PM or AM\n\n  /**\n   * Whether to show the second's timer\n   */\n  @Input()\n  showSecondsTimer: boolean;\n\n  /**\n   * Whether the timer is in hour12 format\n   */\n  @Input()\n  hour12Timer: boolean;\n\n  /**\n   * Hours to change per step\n   */\n  @Input()\n  stepHour = 1;\n\n  /**\n   * Minutes to change per step\n   */\n  @Input()\n  stepMinute = 1;\n\n  /**\n   * Seconds to change per step\n   */\n  @Input()\n  stepSecond = 1;\n\n  get hourValue(): number {\n    return this.dateTimeAdapter.getHours(this.pickerMoment);\n  }\n\n  /**\n   * The value would be displayed in hourBox.\n   * We need this because the value displayed in hourBox it not\n   * the same as the hourValue when the timer is in hour12Timer mode.\n   */\n  get hourBoxValue(): number {\n    let hours = this.hourValue;\n\n    if (!this.hour12Timer) {\n      return hours;\n    } else {\n      if (hours === 0) {\n        hours = 12;\n        this.isPM = false;\n      } else if (hours > 0 && hours < 12) {\n        this.isPM = false;\n      } else if (hours === 12) {\n        this.isPM = true;\n      } else if (hours > 12 && hours < 24) {\n        hours = hours - 12;\n        this.isPM = true;\n      }\n\n      return hours;\n    }\n  }\n\n  get minuteValue(): number {\n    return this.dateTimeAdapter.getMinutes(this.pickerMoment);\n  }\n\n  get secondValue(): number {\n    return this.dateTimeAdapter.getSeconds(this.pickerMoment);\n  }\n\n  get upHourButtonLabel(): string {\n    return this.pickerIntl.upHourLabel;\n  }\n\n  get downHourButtonLabel(): string {\n    return this.pickerIntl.downHourLabel;\n  }\n\n  get upMinuteButtonLabel(): string {\n    return this.pickerIntl.upMinuteLabel;\n  }\n\n  get downMinuteButtonLabel(): string {\n    return this.pickerIntl.downMinuteLabel;\n  }\n\n  get upSecondButtonLabel(): string {\n    return this.pickerIntl.upSecondLabel;\n  }\n\n  get downSecondButtonLabel(): string {\n    return this.pickerIntl.downSecondLabel;\n  }\n\n  get hour12ButtonLabel(): string {\n    return this.isPM ? this.pickerIntl.hour12PMLabel : this.pickerIntl.hour12AMLabel;\n  }\n\n  @Output()\n  selectedChange = new EventEmitter<T>();\n\n  get owlDTTimerClass(): boolean {\n    return true;\n  }\n\n  get owlDTTimeTabIndex(): number {\n    return -1;\n  }\n\n  constructor(\n    private ngZone: NgZone,\n    private elmRef: ElementRef,\n    private pickerIntl: OwlDateTimeIntl,\n    private cdRef: ChangeDetectorRef,\n    @Optional() private dateTimeAdapter: DateTimeAdapter<T>\n  ) {}\n\n  public ngOnInit() {}\n\n  /**\n   * Focus to the host element\n   */\n  public focus() {\n    this.ngZone.runOutsideAngular(() => {\n      this.ngZone.onStable\n        .asObservable()\n        .pipe(take(1))\n        .subscribe(() => {\n          this.elmRef.nativeElement.focus();\n        });\n    });\n  }\n\n  /**\n   * Set the hour value via typing into timer box input\n   * We need this to handle the hour value when the timer is in hour12 mode\n   */\n  public setHourValueViaInput(hours: number): void {\n    if (this.hour12Timer && this.isPM && hours >= 1 && hours <= 11) {\n      hours = hours + 12;\n    } else if (this.hour12Timer && !this.isPM && hours === 12) {\n      hours = 0;\n    }\n\n    this.setHourValue(hours);\n  }\n\n  public setHourValue(hours: number): void {\n    const result = this.dateTimeAdapter.createDate(\n      this.dateTimeAdapter.getYear(this.pickerMoment),\n      this.dateTimeAdapter.getMonth(this.pickerMoment),\n      this.dateTimeAdapter.getDate(this.pickerMoment),\n      hours,\n      this.dateTimeAdapter.getMinutes(this.pickerMoment),\n      this.dateTimeAdapter.getSeconds(this.pickerMoment)\n    );\n    this.selectedChange.emit(result);\n    this.cdRef.markForCheck();\n  }\n\n  public setMinuteValue(minutes: number): void {\n    const result = this.dateTimeAdapter.createDate(\n      this.dateTimeAdapter.getYear(this.pickerMoment),\n      this.dateTimeAdapter.getMonth(this.pickerMoment),\n      this.dateTimeAdapter.getDate(this.pickerMoment),\n      this.dateTimeAdapter.getHours(this.pickerMoment),\n      minutes,\n      this.dateTimeAdapter.getSeconds(this.pickerMoment)\n    );\n    this.selectedChange.emit(result);\n    this.cdRef.markForCheck();\n  }\n\n  public setSecondValue(seconds: number): void {\n    const result = this.dateTimeAdapter.createDate(\n      this.dateTimeAdapter.getYear(this.pickerMoment),\n      this.dateTimeAdapter.getMonth(this.pickerMoment),\n      this.dateTimeAdapter.getDate(this.pickerMoment),\n      this.dateTimeAdapter.getHours(this.pickerMoment),\n      this.dateTimeAdapter.getMinutes(this.pickerMoment),\n      seconds\n    );\n    this.selectedChange.emit(result);\n    this.cdRef.markForCheck();\n  }\n\n  public setMeridian(event: any): void {\n    this.isPM = !this.isPM;\n\n    let hours = this.hourValue;\n    if (this.isPM) {\n      hours = hours + 12;\n    } else {\n      hours = hours - 12;\n    }\n\n    if (hours >= 0 && hours <= 23) {\n      this.setHourValue(hours);\n    }\n\n    this.cdRef.markForCheck();\n    event.preventDefault();\n  }\n\n  /**\n   * Check if the up hour button is enabled\n   */\n  public upHourEnabled(): boolean {\n    return !this.maxDateTime || this.compareHours(this.stepHour, this.maxDateTime) < 1;\n  }\n\n  /**\n   * Check if the down hour button is enabled\n   */\n  public downHourEnabled(): boolean {\n    return !this.minDateTime || this.compareHours(-this.stepHour, this.minDateTime) > -1;\n  }\n\n  /**\n   * Check if the up minute button is enabled\n   */\n  public upMinuteEnabled(): boolean {\n    return !this.maxDateTime || this.compareMinutes(this.stepMinute, this.maxDateTime) < 1;\n  }\n\n  /**\n   * Check if the down minute button is enabled\n   */\n  public downMinuteEnabled(): boolean {\n    return !this.minDateTime || this.compareMinutes(-this.stepMinute, this.minDateTime) > -1;\n  }\n\n  /**\n   * Check if the up second button is enabled\n   */\n  public upSecondEnabled(): boolean {\n    return !this.maxDateTime || this.compareSeconds(this.stepSecond, this.maxDateTime) < 1;\n  }\n\n  /**\n   * Check if the down second button is enabled\n   */\n  public downSecondEnabled(): boolean {\n    return !this.minDateTime || this.compareSeconds(-this.stepSecond, this.minDateTime) > -1;\n  }\n\n  /**\n   * PickerMoment's hour value +/- certain amount and compare it to the give date\n   * 1 is after the comparedDate\n   * -1 is before the comparedDate\n   * 0 is equal the comparedDate\n   */\n  private compareHours(amount: number, comparedDate: T): number {\n    const result = this.dateTimeAdapter.addTimerHours(this.pickerMoment, amount);\n    return this.dateTimeAdapter.compareDate(result, comparedDate);\n  }\n\n  /**\n   * PickerMoment's minute value +/- certain amount and compare it to the give date\n   * 1 is after the comparedDate\n   * -1 is before the comparedDate\n   * 0 is equal the comparedDate\n   */\n  private compareMinutes(amount: number, comparedDate: T): number {\n    const result = this.dateTimeAdapter.addTimerMinutes(this.pickerMoment, amount);\n    return this.dateTimeAdapter.compareDate(result, comparedDate);\n  }\n\n  /**\n   * PickerMoment's second value +/- certain amount and compare it to the give date\n   * 1 is after the comparedDate\n   * -1 is before the comparedDate\n   * 0 is equal the comparedDate\n   */\n  private compareSeconds(amount: number, comparedDate: T): number {\n    const result = this.dateTimeAdapter.addTimerSeconds(this.pickerMoment, amount);\n    return this.dateTimeAdapter.compareDate(result, comparedDate);\n  }\n\n  /**\n   * Get a valid date object\n   */\n  private getValidDate(obj: any): T | null {\n    return this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)\n      ? obj\n      : null;\n  }\n}\n","<owl-date-time-timer-box\n  [upBtnAriaLabel]=\"upHourButtonLabel\"\n  [downBtnAriaLabel]=\"downHourButtonLabel\"\n  [upBtnDisabled]=\"!upHourEnabled()\"\n  [downBtnDisabled]=\"!downHourEnabled()\"\n  [boxValue]=\"hourBoxValue\"\n  [value]=\"hourValue\"\n  [min]=\"0\"\n  [max]=\"23\"\n  [step]=\"stepHour\"\n  [inputLabel]=\"'Hour'\"\n  (inputChange)=\"setHourValueViaInput($event)\"\n  (valueChange)=\"setHourValue($event)\"\n></owl-date-time-timer-box>\n<owl-date-time-timer-box\n  [showDivider]=\"true\"\n  [upBtnAriaLabel]=\"upMinuteButtonLabel\"\n  [downBtnAriaLabel]=\"downMinuteButtonLabel\"\n  [upBtnDisabled]=\"!upMinuteEnabled()\"\n  [downBtnDisabled]=\"!downMinuteEnabled()\"\n  [value]=\"minuteValue\"\n  [min]=\"0\"\n  [max]=\"59\"\n  [step]=\"stepMinute\"\n  [inputLabel]=\"'Minute'\"\n  (inputChange)=\"setMinuteValue($event)\"\n  (valueChange)=\"setMinuteValue($event)\"\n></owl-date-time-timer-box>\n<owl-date-time-timer-box\n  *ngIf=\"showSecondsTimer\"\n  [showDivider]=\"true\"\n  [upBtnAriaLabel]=\"upSecondButtonLabel\"\n  [downBtnAriaLabel]=\"downSecondButtonLabel\"\n  [upBtnDisabled]=\"!upSecondEnabled()\"\n  [downBtnDisabled]=\"!downSecondEnabled()\"\n  [value]=\"secondValue\"\n  [min]=\"0\"\n  [max]=\"59\"\n  [step]=\"stepSecond\"\n  [inputLabel]=\"'Second'\"\n  (inputChange)=\"setSecondValue($event)\"\n  (valueChange)=\"setSecondValue($event)\"\n></owl-date-time-timer-box>\n\n<div *ngIf=\"hour12Timer\" class=\"owl-dt-timer-hour12\">\n  <button\n    class=\"owl-dt-control-button owl-dt-timer-hour12-box\"\n    type=\"button\"\n    tabindex=\"0\"\n    (click)=\"setMeridian($event)\"\n  >\n    <span class=\"owl-dt-control-button-content\" tabindex=\"-1\">\n      {{ hour12ButtonLabel }}\n    </span>\n  </button>\n</div>\n","import {\n  animate,\n  animateChild,\n  AnimationTriggerMetadata,\n  group,\n  query,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\n\nexport const owlDateTimePickerAnimations: {\n  readonly transformPicker: AnimationTriggerMetadata;\n  readonly fadeInPicker: AnimationTriggerMetadata;\n} = {\n  transformPicker: trigger('transformPicker', [\n    state('void', style({ opacity: 0, transform: 'scale(1, 0)' })),\n    state('enter', style({ opacity: 1, transform: 'scale(1, 1)' })),\n    transition(\n      'void => enter',\n      group([\n        query('@fadeInPicker', animateChild(), { optional: true }),\n        animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n      ])\n    ),\n    transition('enter => void', animate('100ms linear', style({ opacity: 0 })))\n  ]),\n\n  fadeInPicker: trigger('fadeInPicker', [\n    state('enter', style({ opacity: 1 })),\n    state('void', style({ opacity: 0 })),\n    transition('void => enter', animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n  ])\n};\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnInit,\n  Optional,\n  ViewChild\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\nimport { OwlCalendarComponent } from './calendar.component';\nimport { OwlTimerComponent } from './timer.component';\nimport { DateTimeAdapter } from '../adapter/date-time-adapter.class';\nimport { OwlDateTime, PickerType } from './date-time.class';\nimport { Observable, Subject } from 'rxjs';\nimport { owlDateTimePickerAnimations } from './date-time-picker.animations';\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW } from '@angular/cdk/keycodes';\n\n@Component({\n  exportAs: 'owlDateTimeContainer',\n  selector: 'owl-date-time-container',\n  templateUrl: './date-time-picker-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    owlDateTimePickerAnimations.transformPicker,\n    owlDateTimePickerAnimations.fadeInPicker\n  ],\n  host: {\n    '(@transformPicker.done)': 'handleContainerAnimationDone($event)',\n    '[class.owl-dt-container]': 'owlDTContainerClass',\n    '[class.owl-dt-popup-container]': 'owlDTPopupContainerClass',\n    '[class.owl-dt-dialog-container]': 'owlDTDialogContainerClass',\n    '[class.owl-dt-inline-container]': 'owlDTInlineContainerClass',\n    '[class.owl-dt-container-disabled]': 'owlDTContainerDisabledClass',\n    '[attr.id]': 'owlDTContainerId',\n    '[@transformPicker]': 'owlDTContainerAnimation'\n  }\n})\nexport class OwlDateTimeContainerComponent<T> implements OnInit, AfterContentInit, AfterViewInit {\n  @ViewChild(OwlCalendarComponent)\n  calendar: OwlCalendarComponent<T>;\n  @ViewChild(OwlTimerComponent)\n  timer: OwlTimerComponent<T>;\n\n  public picker: OwlDateTime<T>;\n  public activeSelectedIndex = 0; // The current active SelectedIndex in range select mode (0: 'from', 1: 'to')\n\n  /**\n   * Stream emits when try to hide picker\n   */\n  private hidePicker$ = new Subject<any>();\n\n  get hidePickerStream(): Observable<any> {\n    return this.hidePicker$.asObservable();\n  }\n\n  /**\n   * Stream emits when try to confirm the selected value\n   */\n  private confirmSelected$ = new Subject<any>();\n\n  get confirmSelectedStream(): Observable<any> {\n    return this.confirmSelected$.asObservable();\n  }\n\n  private pickerOpened$ = new Subject<any>();\n\n  get pickerOpenedStream(): Observable<any> {\n    return this.pickerOpened$.asObservable();\n  }\n\n  /**\n   * The current picker moment. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  private _clamPickerMoment: T;\n\n  get pickerMoment() {\n    return this._clamPickerMoment;\n  }\n\n  set pickerMoment(value: T) {\n    if (value) {\n      this._clamPickerMoment = this.dateTimeAdapter.clampDate(\n        value,\n        this.picker.minDateTime,\n        this.picker.maxDateTime\n      );\n    }\n    this.cdRef.markForCheck();\n  }\n\n  get pickerType(): PickerType {\n    return this.picker.pickerType;\n  }\n\n  get cancelLabel(): string {\n    return this.pickerIntl.cancelBtnLabel;\n  }\n\n  get setLabel(): string {\n    return this.pickerIntl.setBtnLabel;\n  }\n\n  /**\n   * The range 'from' label\n   */\n  get fromLabel(): string {\n    return this.pickerIntl.rangeFromLabel;\n  }\n\n  /**\n   * The range 'to' label\n   */\n  get toLabel(): string {\n    return this.pickerIntl.rangeToLabel;\n  }\n\n  /**\n   * The range 'from' formatted value\n   */\n  get fromFormattedValue(): string {\n    const value = this.picker.selecteds[0];\n    return value ? this.dateTimeAdapter.format(value, this.picker.formatString) : '';\n  }\n\n  /**\n   * The range 'to' formatted value\n   */\n  get toFormattedValue(): string {\n    const value = this.picker.selecteds[1];\n    return value ? this.dateTimeAdapter.format(value, this.picker.formatString) : '';\n  }\n\n  /**\n   * Cases in which the control buttons show in the picker\n   * 1) picker mode is 'dialog'\n   * 2) picker type is NOT 'calendar' and the picker mode is NOT 'inline'\n   */\n  get showControlButtons(): boolean {\n    return (\n      this.picker.pickerMode === 'dialog' ||\n      (this.picker.pickerType !== 'calendar' && this.picker.pickerMode !== 'inline')\n    );\n  }\n\n  get containerElm(): HTMLElement {\n    return this.elmRef.nativeElement;\n  }\n\n  get owlDTContainerClass(): boolean {\n    return true;\n  }\n\n  get owlDTPopupContainerClass(): boolean {\n    return this.picker.pickerMode === 'popup';\n  }\n\n  get owlDTDialogContainerClass(): boolean {\n    return this.picker.pickerMode === 'dialog';\n  }\n\n  get owlDTInlineContainerClass(): boolean {\n    return this.picker.pickerMode === 'inline';\n  }\n\n  get owlDTContainerDisabledClass(): boolean {\n    return this.picker.disabled;\n  }\n\n  get owlDTContainerId(): string {\n    return this.picker.id;\n  }\n\n  get owlDTContainerAnimation(): any {\n    return this.picker.pickerMode === 'inline' ? '' : 'enter';\n  }\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private elmRef: ElementRef,\n    private pickerIntl: OwlDateTimeIntl,\n    @Optional() private dateTimeAdapter: DateTimeAdapter<T>\n  ) {}\n\n  public ngOnInit() {}\n\n  public ngAfterContentInit(): void {\n    this.initPicker();\n  }\n\n  public ngAfterViewInit(): void {\n    this.focusPicker();\n  }\n\n  public handleContainerAnimationDone(event: AnimationEvent): void {\n    const toState = event.toState;\n    if (toState === 'enter') {\n      this.pickerOpened$.next(null);\n    }\n  }\n\n  public dateSelected(date: T): void {\n    let result;\n\n    if (this.picker.isInSingleMode) {\n      result = this.dateSelectedInSingleMode(date);\n      if (result) {\n        this.pickerMoment = result;\n        this.picker.select(result);\n      } else {\n        // we close the picker when result is null and pickerType is calendar.\n        if (this.pickerType === 'calendar') {\n          this.hidePicker$.next(null);\n        }\n      }\n      return;\n    }\n\n    if (this.picker.isInRangeMode) {\n      result = this.dateSelectedInRangeMode(date);\n      if (result) {\n        this.pickerMoment = result[this.activeSelectedIndex];\n        this.picker.select(result);\n      }\n    }\n  }\n\n  public timeSelected(time: T): void {\n    this.pickerMoment = this.dateTimeAdapter.clone(time);\n\n    if (!this.picker.dateTimeChecker(this.pickerMoment)) {\n      return;\n    }\n\n    if (this.picker.isInSingleMode) {\n      this.picker.select(this.pickerMoment);\n      return;\n    }\n\n    if (this.picker.isInRangeMode) {\n      const selecteds = [...this.picker.selecteds];\n\n      // check if the 'from' is after 'to' or 'to'is before 'from'\n      // In this case, we set both the 'from' and 'to' the same value\n      if (\n        (this.activeSelectedIndex === 0 &&\n          selecteds[1] &&\n          this.dateTimeAdapter.compareDate(this.pickerMoment, selecteds[1]) > 0) ||\n        (this.activeSelectedIndex === 1 &&\n          selecteds[0] &&\n          this.dateTimeAdapter.compareDate(this.pickerMoment, selecteds[0]) < 0)\n      ) {\n        selecteds[0] = this.pickerMoment;\n        selecteds[1] = this.pickerMoment;\n      } else {\n        selecteds[this.activeSelectedIndex] = this.pickerMoment;\n      }\n\n      this.picker.select(selecteds);\n    }\n  }\n\n  /**\n   * Handle click on cancel button\n   */\n  public onCancelClicked(event: any): void {\n    this.hidePicker$.next(null);\n    event.preventDefault();\n    return;\n  }\n\n  /**\n   * Handle click on set button\n   */\n  public onSetClicked(event: any): void {\n    if (!this.picker.dateTimeChecker(this.pickerMoment)) {\n      this.hidePicker$.next(null);\n      event.preventDefault();\n      return;\n    }\n\n    this.confirmSelected$.next(event);\n    event.preventDefault();\n    return;\n  }\n\n  /**\n   * Handle click on inform radio group\n   */\n  public handleClickOnInfoGroup(event: any, index: number): void {\n    this.setActiveSelectedIndex(index);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * Handle click on inform radio group\n   */\n  public handleKeydownOnInfoGroup(event: any, next: any, index: number): void {\n    switch (event.keyCode) {\n      case DOWN_ARROW:\n      case RIGHT_ARROW:\n      case UP_ARROW:\n      case LEFT_ARROW:\n        next.focus();\n        this.setActiveSelectedIndex(index === 0 ? 1 : 0);\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n\n      case SPACE:\n        this.setActiveSelectedIndex(index);\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  /**\n   * Set the value of activeSelectedIndex\n   */\n  private setActiveSelectedIndex(index: number): void {\n    if (this.picker.selectMode === 'range' && this.activeSelectedIndex !== index) {\n      this.activeSelectedIndex = index;\n\n      const selected = this.picker.selecteds[this.activeSelectedIndex];\n      if (this.picker.selecteds && selected) {\n        this.pickerMoment = this.dateTimeAdapter.clone(selected);\n      }\n    }\n    return;\n  }\n\n  private initPicker(): void {\n    this.pickerMoment = this.picker.startAt || this.dateTimeAdapter.now();\n    this.activeSelectedIndex = this.picker.selectMode === 'rangeTo' ? 1 : 0;\n  }\n\n  /**\n   * Select calendar date in single mode,\n   * it returns null when date is not selected.\n   */\n  private dateSelectedInSingleMode(date: T): T | null {\n    if (this.dateTimeAdapter.sameDate(date, this.picker.selected)) {\n      return null;\n    }\n\n    return this.updateAndCheckCalendarDate(date);\n  }\n\n  /**\n   * Select dates in range Mode\n   */\n  private dateSelectedInRangeMode(date: T): T[] | null {\n    let from = this.picker.selecteds[0];\n    let to = this.picker.selecteds[1];\n\n    const result = this.updateAndCheckCalendarDate(date);\n\n    if (!result) {\n      return null;\n    }\n\n    // if the given calendar day is after or equal to 'from',\n    // set ths given date as 'to'\n    // otherwise, set it as 'from' and set 'to' to null\n    if (this.picker.selectMode === 'range') {\n      if (\n        this.picker.selecteds &&\n        this.picker.selecteds.length &&\n        !to &&\n        from &&\n        this.dateTimeAdapter.differenceInCalendarDays(result, from) >= 0\n      ) {\n        to = result;\n        this.activeSelectedIndex = 1;\n      } else {\n        from = result;\n        to = null;\n        this.activeSelectedIndex = 0;\n      }\n    } else if (this.picker.selectMode === 'rangeFrom') {\n      from = result;\n\n      // if the from value is after the to value, set the to value as null\n      if (to && this.dateTimeAdapter.compareDate(from, to) > 0) {\n        to = null;\n      }\n    } else if (this.picker.selectMode === 'rangeTo') {\n      to = result;\n\n      // if the from value is after the to value, set the from value as null\n      if (from && this.dateTimeAdapter.compareDate(from, to) > 0) {\n        from = null;\n      }\n    }\n\n    return [from, to];\n  }\n\n  /**\n   * Update the given calendar date's time and check if it is valid\n   * Because the calendar date has 00:00:00 as default time, if the picker type is 'both',\n   * we need to update the given calendar date's time before selecting it.\n   * if it is valid, return the updated dateTime\n   * if it is not valid, return null\n   */\n  private updateAndCheckCalendarDate(date: T): T {\n    let result;\n\n    // if the picker is 'both', update the calendar date's time value\n    if (this.picker.pickerType === 'both') {\n      result = this.dateTimeAdapter.createDate(\n        this.dateTimeAdapter.getYear(date),\n        this.dateTimeAdapter.getMonth(date),\n        this.dateTimeAdapter.getDate(date),\n        this.dateTimeAdapter.getHours(this.pickerMoment),\n        this.dateTimeAdapter.getMinutes(this.pickerMoment),\n        this.dateTimeAdapter.getSeconds(this.pickerMoment)\n      );\n      result = this.dateTimeAdapter.clampDate(\n        result,\n        this.picker.minDateTime,\n        this.picker.maxDateTime\n      );\n    } else {\n      result = this.dateTimeAdapter.clone(date);\n    }\n\n    // check the updated dateTime\n    return this.picker.dateTimeChecker(result) ? result : null;\n  }\n\n  /**\n   * Focus to the picker\n   */\n  private focusPicker(): void {\n    if (this.picker.pickerMode === 'inline') {\n      return;\n    }\n\n    if (this.calendar) {\n      this.calendar.focusActiveCell();\n    } else if (this.timer) {\n      this.timer.focus();\n    }\n  }\n}\n","<div\n  [cdkTrapFocus]=\"picker.pickerMode !== 'inline'\"\n  [@fadeInPicker]=\"picker.pickerMode === 'inline' ? '' : 'enter'\"\n  class=\"owl-dt-container-inner\"\n>\n  <owl-date-time-calendar\n    *ngIf=\"pickerType === 'both' || pickerType === 'calendar'\"\n    class=\"owl-dt-container-row\"\n    [firstDayOfWeek]=\"picker.firstDayOfWeek\"\n    [(pickerMoment)]=\"pickerMoment\"\n    [selected]=\"picker.selected\"\n    [selecteds]=\"picker.selecteds\"\n    [selectMode]=\"picker.selectMode\"\n    [minDate]=\"picker.minDateTime\"\n    [maxDate]=\"picker.maxDateTime\"\n    [dateFilter]=\"picker.dateTimeFilter\"\n    [startView]=\"picker.startView\"\n    [hideOtherMonths]=\"picker.hideOtherMonths\"\n    (yearSelected)=\"picker.selectYear($event)\"\n    (monthSelected)=\"picker.selectMonth($event)\"\n    (selectedChange)=\"dateSelected($event)\"\n  ></owl-date-time-calendar>\n\n  <owl-date-time-timer\n    *ngIf=\"pickerType === 'both' || pickerType === 'timer'\"\n    class=\"owl-dt-container-row\"\n    [pickerMoment]=\"pickerMoment\"\n    [minDateTime]=\"picker.minDateTime\"\n    [maxDateTime]=\"picker.maxDateTime\"\n    [showSecondsTimer]=\"picker.showSecondsTimer\"\n    [hour12Timer]=\"picker.hour12Timer\"\n    [stepHour]=\"picker.stepHour\"\n    [stepMinute]=\"picker.stepMinute\"\n    [stepSecond]=\"picker.stepSecond\"\n    (selectedChange)=\"timeSelected($event)\"\n  ></owl-date-time-timer>\n\n  <div\n    *ngIf=\"picker.isInRangeMode\"\n    role=\"radiogroup\"\n    class=\"owl-dt-container-info owl-dt-container-row\"\n  >\n    <div\n      role=\"radio\"\n      [tabindex]=\"activeSelectedIndex === 0 ? 0 : -1\"\n      [attr.aria-checked]=\"activeSelectedIndex === 0\"\n      class=\"owl-dt-control owl-dt-container-range owl-dt-container-from\"\n      [ngClass]=\"{ 'owl-dt-container-info-active': activeSelectedIndex === 0 }\"\n      (click)=\"handleClickOnInfoGroup($event, 0)\"\n      (keydown)=\"handleKeydownOnInfoGroup($event, to, 0)\"\n      #from\n    >\n      <span class=\"owl-dt-control-content owl-dt-container-range-content\" tabindex=\"-1\">\n        <span class=\"owl-dt-container-info-label\">{{ fromLabel }}:</span>\n        <span class=\"owl-dt-container-info-value\">{{ fromFormattedValue }}</span>\n      </span>\n    </div>\n    <div\n      role=\"radio\"\n      [tabindex]=\"activeSelectedIndex === 1 ? 0 : -1\"\n      [attr.aria-checked]=\"activeSelectedIndex === 1\"\n      class=\"owl-dt-control owl-dt-container-range owl-dt-container-to\"\n      [ngClass]=\"{ 'owl-dt-container-info-active': activeSelectedIndex === 1 }\"\n      (click)=\"handleClickOnInfoGroup($event, 1)\"\n      (keydown)=\"handleKeydownOnInfoGroup($event, from, 1)\"\n      #to\n    >\n      <span class=\"owl-dt-control-content owl-dt-container-range-content\" tabindex=\"-1\">\n        <span class=\"owl-dt-container-info-label\">{{ toLabel }}:</span>\n        <span class=\"owl-dt-container-info-value\">{{ toFormattedValue }}</span>\n      </span>\n    </div>\n  </div>\n\n  <div *ngIf=\"showControlButtons\" class=\"owl-dt-container-buttons owl-dt-container-row\">\n    <button\n      class=\"owl-dt-control owl-dt-control-button owl-dt-container-control-button\"\n      type=\"button\"\n      tabindex=\"0\"\n      (click)=\"onCancelClicked($event)\"\n    >\n      <span class=\"owl-dt-control-content owl-dt-control-button-content\" tabindex=\"-1\">\n        {{ cancelLabel }}\n      </span>\n    </button>\n    <button\n      class=\"owl-dt-control owl-dt-control-button owl-dt-container-control-button\"\n      type=\"button\"\n      tabindex=\"0\"\n      (click)=\"onSetClicked($event)\"\n    >\n      <span class=\"owl-dt-control-content owl-dt-control-button-content\" tabindex=\"-1\">\n        {{ setLabel }}\n      </span>\n    </button>\n  </div>\n</div>\n","import { EventEmitter, Inject, Input, Optional, Directive } from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DateTimeAdapter } from '../adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from '../adapter/date-time-format.class';\n\nlet nextUniqueId = 0;\n\nexport type PickerType = 'both' | 'calendar' | 'timer';\n\nexport type PickerMode = 'popup' | 'dialog' | 'inline';\n\nexport type SelectMode = 'single' | 'range' | 'rangeFrom' | 'rangeTo';\n\n@Directive()\nexport abstract class OwlDateTime<T> {\n  /**\n   * Whether to show the second's timer\n   */\n  private _showSecondsTimer = false;\n  @Input()\n  get showSecondsTimer(): boolean {\n    return this._showSecondsTimer;\n  }\n\n  set showSecondsTimer(val: boolean) {\n    this._showSecondsTimer = coerceBooleanProperty(val);\n  }\n\n  /**\n   * Whether the timer is in hour12 format\n   */\n  private _hour12Timer = false;\n  @Input()\n  get hour12Timer(): boolean {\n    return this._hour12Timer;\n  }\n\n  set hour12Timer(val: boolean) {\n    this._hour12Timer = coerceBooleanProperty(val);\n  }\n\n  /**\n   * The view that the calendar should start in.\n   */\n  @Input()\n  startView: 'month' | 'year' | 'multi-years' = 'month';\n\n  /**\n   * Hours to change per step\n   */\n  private _stepHour = 1;\n  @Input()\n  get stepHour(): number {\n    return this._stepHour;\n  }\n\n  set stepHour(val: number) {\n    this._stepHour = coerceNumberProperty(val, 1);\n  }\n\n  /**\n   * Minutes to change per step\n   */\n  private _stepMinute = 1;\n  @Input()\n  get stepMinute(): number {\n    return this._stepMinute;\n  }\n\n  set stepMinute(val: number) {\n    this._stepMinute = coerceNumberProperty(val, 1);\n  }\n\n  /**\n   * Seconds to change per step\n   */\n  private _stepSecond = 1;\n  @Input()\n  get stepSecond(): number {\n    return this._stepSecond;\n  }\n\n  set stepSecond(val: number) {\n    this._stepSecond = coerceNumberProperty(val, 1);\n  }\n\n  /**\n   * Set the first day of week\n   */\n  private _firstDayOfWeek: number;\n  @Input()\n  get firstDayOfWeek() {\n    return this._firstDayOfWeek;\n  }\n\n  set firstDayOfWeek(value: number) {\n    value = coerceNumberProperty(value);\n    if (value > 6 || value < 0) {\n      this._firstDayOfWeek = undefined;\n    } else {\n      this._firstDayOfWeek = value;\n    }\n  }\n\n  /**\n   * Whether to hide dates in other months at the start or end of the current month.\n   */\n  private _hideOtherMonths = false;\n  @Input()\n  get hideOtherMonths(): boolean {\n    return this._hideOtherMonths;\n  }\n\n  set hideOtherMonths(val: boolean) {\n    this._hideOtherMonths = coerceBooleanProperty(val);\n  }\n\n  private readonly _id: string;\n  get id(): string {\n    return this._id;\n  }\n\n  abstract get selected(): T | null;\n\n  abstract get selecteds(): T[] | null;\n\n  abstract get dateTimeFilter(): (date: T | null) => boolean;\n\n  abstract get maxDateTime(): T | null;\n\n  abstract get minDateTime(): T | null;\n\n  abstract get selectMode(): SelectMode;\n\n  abstract get startAt(): T | null;\n\n  abstract get opened(): boolean;\n\n  abstract get pickerMode(): PickerMode;\n\n  abstract get pickerType(): PickerType;\n\n  abstract get isInSingleMode(): boolean;\n\n  abstract get isInRangeMode(): boolean;\n\n  abstract select(date: T | T[]): void;\n\n  abstract yearSelected: EventEmitter<T>;\n\n  abstract monthSelected: EventEmitter<T>;\n\n  abstract selectYear(normalizedYear: T): void;\n\n  abstract selectMonth(normalizedMonth: T): void;\n\n  get formatString(): string {\n    return this.pickerType === 'both'\n      ? this.dateTimeFormats.display.fullInput\n      : this.pickerType === 'calendar'\n      ? this.dateTimeFormats.display.dateInput\n      : this.dateTimeFormats.display.timeInput;\n  }\n\n  /**\n   * Date Time Checker to check if the give dateTime is selectable\n   */\n  public dateTimeChecker = (dateTime: T) => {\n    return (\n      !!dateTime &&\n      (!this.dateTimeFilter || this.dateTimeFilter(dateTime)) &&\n      (!this.minDateTime || this.dateTimeAdapter.compareDate(dateTime, this.minDateTime) >= 0) &&\n      (!this.maxDateTime || this.dateTimeAdapter.compareDate(dateTime, this.maxDateTime) <= 0)\n    );\n  };\n\n  get disabled(): boolean {\n    return false;\n  }\n\n  constructor(\n    @Optional() protected dateTimeAdapter: DateTimeAdapter<T>,\n    @Optional()\n    @Inject(OWL_DATE_TIME_FORMATS)\n    protected dateTimeFormats: OwlDateTimeFormats\n  ) {\n    if (!this.dateTimeAdapter) {\n      throw Error(\n        `OwlDateTimePicker: No provider found for DateTimeAdapter. You must import one of the following ` +\n          `modules at your application root: OwlNativeDateTimeModule or provide a ` +\n          `custom implementation.`\n      );\n    }\n\n    if (!this.dateTimeFormats) {\n      throw Error(\n        `OwlDateTimePicker: No provider found for OWL_DATE_TIME_FORMATS. You must import one of the following ` +\n          `modules at your application root: OwlNativeDateTimeModule or provide a ` +\n          `custom implementation.`\n      );\n    }\n\n    this._id = `owl-dt-picker-${nextUniqueId++}`;\n  }\n\n  protected getValidDate(obj: any): T | null {\n    return this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)\n      ? obj\n      : null;\n  }\n}\n","import { ViewContainerRef } from '@angular/core';\nimport { NoopScrollStrategy, ScrollStrategy } from '@angular/cdk/overlay';\n\nlet uniqueId = 0;\n\n/** Possible overrides for a dialog's position. */\nexport interface DialogPosition {\n  /** Override for the dialog's top position. */\n  top?: string;\n\n  /** Override for the dialog's bottom position. */\n  bottom?: string;\n\n  /** Override for the dialog's left position. */\n  left?: string;\n\n  /** Override for the dialog's right position. */\n  right?: string;\n}\n\nexport class OwlDialogConfig {\n  /**\n   * ID of the element that describes the dialog.\n   */\n  public ariaDescribedBy?: string | null = null;\n\n  /**\n   * Whether to focus the dialog when the dialog is opened\n   */\n  public autoFocus? = true;\n\n  /** Whether the dialog has a backdrop. */\n  public hasBackdrop? = true;\n\n  /**\n   * Custom style for the backdrop\n   */\n  public backdropStyle?: any;\n\n  /** Data being injected into the child component. */\n  public data?: any = null;\n\n  /** Whether the user can use escape or clicking outside to close a modal. */\n  public disableClose? = false;\n\n  /**\n   * ID for the modal. If omitted, a unique one will be generated.\n   */\n  public id?: string;\n\n  /**\n   * The ARIA role of the dialog element.\n   */\n  public role?: 'dialog' | 'alertdialog' = 'dialog';\n\n  /**\n   * Custom class for the pane\n   */\n  public paneClass?: string | string[] = '';\n\n  /**\n   * Mouse Event\n   */\n  public event?: MouseEvent = null;\n\n  /**\n   * Custom class for the backdrop\n   */\n  public backdropClass?: string | string[] = '';\n\n  /**\n   * Whether the dialog should close when the user goes backwards/forwards in history.\n   */\n  public closeOnNavigation? = true;\n\n  /** Width of the dialog. */\n  public width? = '';\n\n  /** Height of the dialog. */\n  public height? = '';\n\n  /**\n   * The min-width of the overlay panel.\n   * If a number is provided, pixel units are assumed.\n   */\n  public minWidth?: number | string;\n\n  /**\n   * The min-height of the overlay panel.\n   * If a number is provided, pixel units are assumed.\n   */\n  public minHeight?: number | string;\n\n  /**\n   * The max-width of the overlay panel.\n   * If a number is provided, pixel units are assumed.\n   */\n  public maxWidth?: number | string = '85vw';\n\n  /**\n   * The max-height of the overlay panel.\n   * If a number is provided, pixel units are assumed.\n   */\n  public maxHeight?: number | string;\n\n  /** Position overrides. */\n  public position?: DialogPosition;\n\n  /**\n   * The scroll strategy when the dialog is open\n   * Learn more this from https://material.angular.io/cdk/overlay/overview#scroll-strategies\n   */\n  public scrollStrategy?: ScrollStrategy = new NoopScrollStrategy();\n\n  public viewContainerRef?: ViewContainerRef;\n\n  constructor() {\n    this.id = `owl-dialog-${uniqueId++}`;\n  }\n}\n","import { AnimationEvent } from '@angular/animations';\nimport { Location } from '@angular/common';\nimport { GlobalPositionStrategy, OverlayRef } from '@angular/cdk/overlay';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { OwlDialogContainerComponent } from './dialog-container.component';\nimport { DialogPosition } from './dialog-config.class';\nimport { Observable, Subject, Subscription, SubscriptionLike as ISubscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nexport class OwlDialogRef<T> {\n  private result: any;\n\n  private _beforeClose$ = new Subject<any>();\n\n  private _afterOpen$ = new Subject<any>();\n\n  private _afterClosed$ = new Subject<any>();\n\n  /** Subscription to changes in the user's location. */\n  private locationChanged: ISubscription = Subscription.EMPTY;\n\n  /**\n   * The instance of component opened into modal\n   */\n  public componentInstance: T;\n\n  /** Whether the user is allowed to close the dialog. */\n  public disableClose = this.container.config.disableClose;\n\n  constructor(\n    private overlayRef: OverlayRef,\n    private container: OwlDialogContainerComponent,\n    public readonly id: string,\n    location?: Location\n  ) {\n    this.container.animationStateChanged\n      .pipe(\n        filter((event: AnimationEvent) => event.phaseName === 'done' && event.toState === 'enter'),\n        take(1)\n      )\n      .subscribe(() => {\n        this._afterOpen$.next(null);\n        this._afterOpen$.complete();\n      });\n\n    this.container.animationStateChanged\n      .pipe(\n        filter((event: AnimationEvent) => event.phaseName === 'done' && event.toState === 'exit'),\n        take(1)\n      )\n      .subscribe(() => {\n        this.overlayRef.dispose();\n        this.locationChanged.unsubscribe();\n        this._afterClosed$.next(this.result);\n        this._afterClosed$.complete();\n        this.componentInstance = undefined;\n      });\n\n    this.overlayRef\n      .keydownEvents()\n      .pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose))\n      .subscribe(() => this.close());\n\n    if (location) {\n      this.locationChanged = location.subscribe(() => {\n        if (this.container.config.closeOnNavigation) {\n          this.close();\n        }\n      });\n    }\n  }\n\n  public close(dialogResult?: any) {\n    this.result = dialogResult;\n\n    this.container.animationStateChanged\n      .pipe(\n        filter((event: AnimationEvent) => event.phaseName === 'start'),\n        take(1)\n      )\n      .subscribe(() => {\n        this._beforeClose$.next(dialogResult);\n        this._beforeClose$.complete();\n        this.overlayRef.detachBackdrop();\n      });\n\n    this.container.startExitAnimation();\n  }\n\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  public backdropClick(): Observable<any> {\n    return this.overlayRef.backdropClick();\n  }\n\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  public keydownEvents(): Observable<KeyboardEvent> {\n    return this.overlayRef.keydownEvents();\n  }\n\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  public updatePosition(position?: DialogPosition): this {\n    const strategy = this.getPositionStrategy();\n\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n\n    this.overlayRef.updatePosition();\n\n    return this;\n  }\n\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width = 'auto', height = 'auto'): this {\n    this.getPositionStrategy().width(width).height(height);\n    this.overlayRef.updatePosition();\n    return this;\n  }\n\n  public isAnimating(): boolean {\n    return this.container.isAnimating;\n  }\n\n  public afterOpen(): Observable<any> {\n    return this._afterOpen$.asObservable();\n  }\n\n  public beforeClose(): Observable<any> {\n    return this._beforeClose$.asObservable();\n  }\n\n  public afterClosed(): Observable<any> {\n    return this._afterClosed$.asObservable();\n  }\n\n  /** Fetches the position strategy object from the overlay ref. */\n  private getPositionStrategy(): GlobalPositionStrategy {\n    return this.overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Inject,\n  OnInit,\n  Optional,\n  ViewChild\n} from '@angular/core';\nimport {\n  animate,\n  animateChild,\n  AnimationEvent,\n  keyframes,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  ComponentPortal,\n  TemplatePortal\n} from '@angular/cdk/portal';\nimport { OwlDialogConfig } from './dialog-config.class';\n\nconst zoomFadeIn = {\n  opacity: 0,\n  transform: 'translateX({{ x }}) translateY({{ y }}) scale({{scale}})'\n};\nconst zoomFadeInFrom = {\n  opacity: 0,\n  transform: 'translateX({{ x }}) translateY({{ y }}) scale({{scale}})',\n  transformOrigin: '{{ ox }} {{ oy }}'\n};\n\n@Component({\n  selector: 'owl-dialog-container',\n  templateUrl: './dialog-container.component.html',\n  animations: [\n    trigger('slideModal', [\n      transition(\n        'void => enter',\n        [\n          style(zoomFadeInFrom),\n          animate('300ms cubic-bezier(0.35, 0, 0.25, 1)', style('*')),\n          animate(\n            '150ms',\n            keyframes([\n              style({ transform: 'scale(1)', offset: 0 }),\n              style({ transform: 'scale(1.05)', offset: 0.3 }),\n              style({ transform: 'scale(.95)', offset: 0.8 }),\n              style({ transform: 'scale(1)', offset: 1.0 })\n            ])\n          ),\n          animateChild()\n        ],\n        {\n          params: {\n            x: '0px',\n            y: '0px',\n            ox: '50%',\n            oy: '50%',\n            scale: 1\n          }\n        }\n      ),\n      transition('enter => exit', [animateChild(), animate(200, style(zoomFadeIn))], {\n        params: { x: '0px', y: '0px', ox: '50%', oy: '50%' }\n      })\n    ])\n  ],\n  host: {\n    '(@slideModal.start)': 'onAnimationStart($event)',\n    '(@slideModal.done)': 'onAnimationDone($event)',\n    '[class.owl-dialog-container]': 'owlDialogContainerClass',\n    '[attr.tabindex]': 'owlDialogContainerTabIndex',\n    '[attr.id]': 'owlDialogContainerId',\n    '[attr.role]': 'owlDialogContainerRole',\n    '[attr.aria-labelledby]': 'owlDialogContainerAriaLabelledby',\n    '[attr.aria-describedby]': 'owlDialogContainerAriaDescribedby',\n    '[@slideModal]': 'owlDialogContainerAnimation'\n  }\n})\nexport class OwlDialogContainerComponent extends BasePortalOutlet implements OnInit {\n  @ViewChild(CdkPortalOutlet, { static: true })\n  portalOutlet: CdkPortalOutlet;\n\n  /** The class that traps and manages focus within the dialog. */\n  private focusTrap: FocusTrap;\n\n  /** ID of the element that should be considered as the dialog's label. */\n  public ariaLabelledBy: string | null = null;\n\n  /** Emits when an animation state changes. */\n  public animationStateChanged = new EventEmitter<AnimationEvent>();\n\n  public isAnimating = false;\n\n  private _config: OwlDialogConfig;\n  get config(): OwlDialogConfig {\n    return this._config;\n  }\n\n  private state: 'void' | 'enter' | 'exit' = 'enter';\n\n  // for animation purpose\n  private params: any = {\n    x: '0px',\n    y: '0px',\n    ox: '50%',\n    oy: '50%',\n    scale: 0\n  };\n\n  // A variable to hold the focused element before the dialog was open.\n  // This would help us to refocus back to element when the dialog was closed.\n  private elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\n\n  get owlDialogContainerClass(): boolean {\n    return true;\n  }\n\n  get owlDialogContainerTabIndex(): number {\n    return -1;\n  }\n\n  get owlDialogContainerId(): string {\n    return this._config.id;\n  }\n\n  get owlDialogContainerRole(): string {\n    return this._config.role || null;\n  }\n\n  get owlDialogContainerAriaLabelledby(): string {\n    return this.ariaLabelledBy;\n  }\n\n  get owlDialogContainerAriaDescribedby(): string {\n    return this._config.ariaDescribedBy || null;\n  }\n\n  get owlDialogContainerAnimation(): any {\n    return { value: this.state, params: this.params };\n  }\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    private focusTrapFactory: FocusTrapFactory,\n    @Optional()\n    @Inject(DOCUMENT)\n    private document: any\n  ) {\n    super();\n  }\n\n  public ngOnInit() {}\n\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   */\n  public attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this.portalOutlet.hasAttached()) {\n      throw Error('Attempting to attach dialog content after content is already attached');\n    }\n\n    this.savePreviouslyFocusedElement();\n    return this.portalOutlet.attachComponentPortal(portal);\n  }\n\n  public attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    throw new Error('Method not implemented.');\n  }\n\n  public setConfig(config: OwlDialogConfig): void {\n    this._config = config;\n\n    if (config.event) {\n      this.calculateZoomOrigin(event);\n    }\n  }\n\n  public onAnimationStart(event: AnimationEvent): void {\n    this.isAnimating = true;\n    this.animationStateChanged.emit(event);\n  }\n\n  public onAnimationDone(event: AnimationEvent): void {\n    if (event.toState === 'enter') {\n      this.trapFocus();\n    } else if (event.toState === 'exit') {\n      this.restoreFocus();\n    }\n\n    this.animationStateChanged.emit(event);\n    this.isAnimating = false;\n  }\n\n  public startExitAnimation() {\n    this.state = 'exit';\n    this.changeDetector.markForCheck();\n  }\n\n  /**\n   * Calculate origin used in the `zoomFadeInFrom()`\n   * for animation purpose\n   */\n  private calculateZoomOrigin(event: any): void {\n    if (!event) {\n      return;\n    }\n\n    const clientX = event.clientX;\n    const clientY = event.clientY;\n\n    const wh = window.innerWidth / 2;\n    const hh = window.innerHeight / 2;\n    const x = clientX - wh;\n    const y = clientY - hh;\n    const ox = clientX / window.innerWidth;\n    const oy = clientY / window.innerHeight;\n\n    this.params.x = `${x}px`;\n    this.params.y = `${y}px`;\n    this.params.ox = `${ox * 100}%`;\n    this.params.oy = `${oy * 100}%`;\n    this.params.scale = 0;\n\n    return;\n  }\n\n  /**\n   * Save the focused element before dialog was open\n   */\n  private savePreviouslyFocusedElement(): void {\n    if (this.document) {\n      this.elementFocusedBeforeDialogWasOpened = this.document.activeElement as HTMLElement;\n\n      Promise.resolve().then(() => this.elementRef.nativeElement.focus());\n    }\n  }\n\n  private trapFocus(): void {\n    if (!this.focusTrap) {\n      this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\n    }\n\n    if (this._config.autoFocus) {\n      this.focusTrap.focusInitialElementWhenReady();\n    }\n  }\n\n  private restoreFocus(): void {\n    const toFocus = this.elementFocusedBeforeDialogWasOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n\n    if (this.focusTrap) {\n      this.focusTrap.destroy();\n    }\n  }\n}\n","<ng-template cdkPortalOutlet></ng-template>\n","/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (const source of sources) {\n    if (source != null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","import {\n  ComponentRef,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional,\n  SkipSelf,\n  TemplateRef\n} from '@angular/core';\nimport { Location } from '@angular/common';\nimport { OwlDialogConfig } from './dialog-config.class';\nimport { OwlDialogRef } from './dialog-ref.class';\nimport { OwlDialogContainerComponent } from './dialog-container.component';\nimport { extendObject } from '../utils';\nimport { defer, Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayContainer,\n  OverlayRef,\n  ScrollStrategy\n} from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType, PortalInjector } from '@angular/cdk/portal';\n\nexport const OWL_DIALOG_DATA = new InjectionToken<any>('OwlDialogData');\n\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n */\nexport const OWL_DIALOG_SCROLL_STRATEGY = new InjectionToken<() => ScrollStrategy>(\n  'owl-dialog-scroll-strategy'\n);\n\nexport function OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(\n  overlay: Overlay\n): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport const OWL_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: OWL_DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/**\n * Injection token that can be used to specify default dialog options.\n */\nexport const OWL_DIALOG_DEFAULT_OPTIONS = new InjectionToken<OwlDialogConfig>(\n  'owl-dialog-default-options'\n);\n\n@Injectable()\nexport class OwlDialogService {\n  private ariaHiddenElements = new Map<Element, string | null>();\n\n  private _openDialogsAtThisLevel: OwlDialogRef<any>[] = [];\n  private _afterOpenAtThisLevel = new Subject<OwlDialogRef<any>>();\n  private _afterAllClosedAtThisLevel = new Subject<void>();\n\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs(): OwlDialogRef<any>[] {\n    return this.parentDialog ? this.parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpen(): Subject<OwlDialogRef<any>> {\n    return this.parentDialog ? this.parentDialog.afterOpen : this._afterOpenAtThisLevel;\n  }\n\n  get _afterAllClosed(): any {\n    const parent = this.parentDialog;\n    return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n  }\n\n  /**\n   * Stream that emits when all open dialog have finished closing.\n   * Will emit on subscribe if there are no open dialogs to begin with.\n   */\n\n  afterAllClosed: Observable<{}> = defer(() =>\n    this._openDialogsAtThisLevel.length\n      ? this._afterAllClosed\n      : this._afterAllClosed.pipe(startWith(undefined))\n  );\n\n  private scrollStrategy: () => ScrollStrategy;\n\n  constructor(\n    private overlay: Overlay,\n    private injector: Injector,\n    @Optional() private location: Location,\n    @Inject(OWL_DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\n    @Optional()\n    @Inject(OWL_DIALOG_DEFAULT_OPTIONS)\n    private defaultOptions: OwlDialogConfig,\n    @Optional()\n    @SkipSelf()\n    private parentDialog: OwlDialogService,\n    private overlayContainer: OverlayContainer\n  ) {\n    this.scrollStrategy = scrollStrategy;\n    if (!parentDialog && location) {\n      location.subscribe(() => this.closeAll());\n    }\n  }\n\n  public open<T>(\n    componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n    config?: OwlDialogConfig\n  ): OwlDialogRef<any> {\n    config = applyConfigDefaults(config, this.defaultOptions);\n\n    if (config.id && this.getDialogById(config.id)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n\n    const overlayRef = this.createOverlay(config);\n    const dialogContainer = this.attachDialogContainer(overlayRef, config);\n    const dialogRef = this.attachDialogContent<T>(\n      componentOrTemplateRef,\n      dialogContainer,\n      overlayRef,\n      config\n    );\n\n    if (!this.openDialogs.length) {\n      this.hideNonDialogContentFromAssistiveTechnology();\n    }\n\n    this.openDialogs.push(dialogRef);\n    dialogRef.afterClosed().subscribe(() => this.removeOpenDialog(dialogRef));\n    this.afterOpen.next(dialogRef);\n    return dialogRef;\n  }\n\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  public closeAll(): void {\n    let i = this.openDialogs.length;\n\n    while (i--) {\n      this.openDialogs[i].close();\n    }\n  }\n\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  public getDialogById(id: string): OwlDialogRef<any> | undefined {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n\n  private attachDialogContent<T>(\n    componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n    dialogContainer: OwlDialogContainerComponent,\n    overlayRef: OverlayRef,\n    config: OwlDialogConfig\n  ) {\n    const dialogRef = new OwlDialogRef<T>(overlayRef, dialogContainer, config.id, this.location);\n\n    if (config.hasBackdrop) {\n      overlayRef.backdropClick().subscribe(() => {\n        if (!dialogRef.disableClose) {\n          dialogRef.close();\n        }\n      });\n    }\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n    } else {\n      const injector = this.createInjector<T>(config, dialogRef, dialogContainer);\n      const contentRef = dialogContainer.attachComponentPortal(\n        new ComponentPortal(componentOrTemplateRef, undefined, injector)\n      );\n      dialogRef.componentInstance = contentRef.instance;\n    }\n\n    dialogRef.updateSize(config.width, config.height).updatePosition(config.position);\n\n    return dialogRef;\n  }\n\n  private createInjector<T>(\n    config: OwlDialogConfig,\n    dialogRef: OwlDialogRef<T>,\n    dialogContainer: OwlDialogContainerComponent\n  ) {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injectionTokens = new WeakMap();\n\n    injectionTokens.set(OwlDialogRef, dialogRef);\n    injectionTokens.set(OwlDialogContainerComponent, dialogContainer);\n    injectionTokens.set(OWL_DIALOG_DATA, config.data);\n\n    return new PortalInjector(userInjector || this.injector, injectionTokens);\n  }\n\n  private createOverlay(config: OwlDialogConfig): OverlayRef {\n    const overlayConfig = this.getOverlayConfig(config);\n    return this.overlay.create(overlayConfig);\n  }\n\n  private attachDialogContainer(\n    overlayRef: OverlayRef,\n    config: OwlDialogConfig\n  ): OwlDialogContainerComponent {\n    const containerPortal = new ComponentPortal(\n      OwlDialogContainerComponent,\n      config.viewContainerRef\n    );\n    const containerRef: ComponentRef<OwlDialogContainerComponent> =\n      overlayRef.attach(containerPortal);\n    containerRef.instance.setConfig(config);\n\n    return containerRef.instance;\n  }\n\n  private getOverlayConfig(dialogConfig: OwlDialogConfig): OverlayConfig {\n    const state = new OverlayConfig({\n      positionStrategy: this.overlay.position().global(),\n      scrollStrategy: dialogConfig.scrollStrategy || this.scrollStrategy(),\n      panelClass: dialogConfig.paneClass,\n      hasBackdrop: dialogConfig.hasBackdrop,\n      minWidth: dialogConfig.minWidth,\n      minHeight: dialogConfig.minHeight,\n      maxWidth: dialogConfig.maxWidth,\n      maxHeight: dialogConfig.maxHeight\n    });\n\n    if (dialogConfig.backdropClass) {\n      state.backdropClass = dialogConfig.backdropClass;\n    }\n\n    return state;\n  }\n\n  private removeOpenDialog(dialogRef: OwlDialogRef<any>): void {\n    const index = this._openDialogsAtThisLevel.indexOf(dialogRef);\n\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\n      // to a the siblings and emit to the `afterAllClosed` stream.\n      if (!this.openDialogs.length) {\n        this.ariaHiddenElements.forEach((previousValue, element) => {\n          if (previousValue) {\n            element.setAttribute('aria-hidden', previousValue);\n          } else {\n            element.removeAttribute('aria-hidden');\n          }\n        });\n\n        this.ariaHiddenElements.clear();\n        this._afterAllClosed.next();\n      }\n    }\n  }\n\n  /**\n   * Hides all of the content that isn't an overlay from assistive technology.\n   */\n  private hideNonDialogContentFromAssistiveTechnology() {\n    const overlayContainer = this.overlayContainer.getContainerElement();\n\n    // Ensure that the overlay container is attached to the DOM.\n    if (overlayContainer.parentElement) {\n      const siblings = overlayContainer.parentElement.children;\n\n      for (let i = siblings.length - 1; i > -1; i--) {\n        const sibling = siblings[i];\n\n        if (\n          sibling !== overlayContainer &&\n          sibling.nodeName !== 'SCRIPT' &&\n          sibling.nodeName !== 'STYLE' &&\n          !sibling.hasAttribute('aria-live')\n        ) {\n          this.ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n  }\n}\n\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default config setting\n * @returns The new configuration object.\n */\nfunction applyConfigDefaults(\n  config?: OwlDialogConfig,\n  defaultOptions?: OwlDialogConfig\n): OwlDialogConfig {\n  return extendObject(new OwlDialogConfig(), config, defaultOptions);\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport {\n  BlockScrollStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  ScrollStrategy\n} from '@angular/cdk/overlay';\nimport { ESCAPE, UP_ARROW } from '@angular/cdk/keycodes';\nimport { coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\nimport { OwlDateTimeInputDirective } from './date-time-picker-input.directive';\nimport { DateTimeAdapter } from '../adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from '../adapter/date-time-format.class';\nimport { OwlDateTime, PickerMode, PickerType, SelectMode } from './date-time.class';\nimport { OwlDialogRef } from '../dialog/dialog-ref.class';\nimport { OwlDialogService } from '../dialog/dialog.service';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\n/** Injection token that determines the scroll handling while the dtPicker is open. */\nexport const OWL_DTPICKER_SCROLL_STRATEGY = new InjectionToken<() => ScrollStrategy>(\n  'owl-dtpicker-scroll-strategy'\n);\n\n/** @docs-private */\nexport function OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY(\n  overlay: Overlay\n): () => BlockScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport const OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER = {\n  provide: OWL_DTPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n@Component({\n  selector: 'owl-date-time',\n  exportAs: 'owlDateTime',\n  templateUrl: './date-time-picker.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OwlDateTimeComponent<T> extends OwlDateTime<T> implements OnInit, OnDestroy {\n  /** Custom class for the picker backdrop. */\n  @Input()\n  public backdropClass: string | string[] = [];\n\n  /** Custom class for the picker overlay pane. */\n  @Input()\n  public panelClass: string | string[] = [];\n\n  /** The date to open the calendar to initially. */\n  private _startAt: T | null;\n  @Input()\n  get startAt(): T | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    if (this._startAt) {\n      return this._startAt;\n    }\n\n    if (this._dtInput) {\n      if (this._dtInput.selectMode === 'single') {\n        return this._dtInput.value || null;\n      } else if (this._dtInput.selectMode === 'range' || this._dtInput.selectMode === 'rangeFrom') {\n        return this._dtInput.values[0] || null;\n      } else if (this._dtInput.selectMode === 'rangeTo') {\n        return this._dtInput.values[1] || null;\n      }\n    }\n    return null;\n  }\n\n  set startAt(date: T | null) {\n    this._startAt = this.getValidDate(this.dateTimeAdapter.deserialize(date));\n  }\n\n  /**\n   * Set the type of the dateTime picker\n   *      'both' -- show both calendar and timer\n   *      'calendar' -- show only calendar\n   *      'timer' -- show only timer\n   */\n  private _pickerType: PickerType = 'both';\n  @Input()\n  get pickerType(): PickerType {\n    return this._pickerType;\n  }\n\n  set pickerType(val: PickerType) {\n    if (val !== this._pickerType) {\n      this._pickerType = val;\n      if (this._dtInput) {\n        this._dtInput.formatNativeInputValue();\n      }\n    }\n  }\n\n  /**\n   * Whether the picker open as a dialog\n   */\n  _pickerMode: PickerMode = 'popup';\n  @Input()\n  get pickerMode() {\n    return this._pickerMode;\n  }\n\n  set pickerMode(mode: PickerMode) {\n    if (mode === 'popup') {\n      this._pickerMode = mode;\n    } else {\n      this._pickerMode = 'dialog';\n    }\n  }\n\n  /** Whether the date time picker should be disabled. */\n  private _disabled: boolean;\n  @Input()\n  override get disabled(): boolean {\n    return this._disabled === undefined && this._dtInput\n      ? this._dtInput.disabled\n      : !!this._disabled;\n  }\n\n  override set disabled(value: boolean) {\n    value = coerceBooleanProperty(value);\n    if (value !== this._disabled) {\n      this._disabled = value;\n      this.disabledChange.next(value);\n    }\n  }\n\n  /** Whether the calendar is open. */\n  private _opened = false;\n  @Input()\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  set opened(val: boolean) {\n    val ? this.open() : this.close();\n  }\n\n  /**\n   * The scroll strategy when the picker is open\n   * Learn more this from https://material.angular.io/cdk/overlay/overview#scroll-strategies\n   */\n  @Input()\n  public scrollStrategy: ScrollStrategy;\n\n  /**\n   * Callback when the picker is closed\n   */\n  @Output()\n  afterPickerClosed = new EventEmitter<any>();\n\n  /**\n   * Callback when the picker is open\n   */\n  @Output()\n  afterPickerOpen = new EventEmitter<any>();\n\n  /**\n   * Emits selected year in multi-year view\n   * This doesn't imply a change on the selected date.\n   */\n  @Output()\n  yearSelected = new EventEmitter<T>();\n\n  /**\n   * Emits selected month in year view\n   * This doesn't imply a change on the selected date.\n   */\n  @Output()\n  monthSelected = new EventEmitter<T>();\n\n  /**\n   * Emit when the selected value has been confirmed\n   */\n  public confirmSelectedChange = new EventEmitter<T[] | T>();\n\n  /**\n   * Emits when the date time picker is disabled.\n   */\n  public disabledChange = new EventEmitter<boolean>();\n\n  private pickerContainerPortal: ComponentPortal<OwlDateTimeContainerComponent<T>>;\n  private pickerContainer: OwlDateTimeContainerComponent<T>;\n  private popupRef: OverlayRef;\n  private dialogRef: OwlDialogRef<OwlDateTimeContainerComponent<T>>;\n  private dtInputSub = Subscription.EMPTY;\n  private hidePickerStreamSub = Subscription.EMPTY;\n  private confirmSelectedStreamSub = Subscription.EMPTY;\n  private pickerOpenedStreamSub = Subscription.EMPTY;\n\n  /** The element that was focused before the date time picker was opened. */\n  private focusedElementBeforeOpen: HTMLElement | null = null;\n\n  private _dtInput: OwlDateTimeInputDirective<T>;\n  get dtInput() {\n    return this._dtInput;\n  }\n\n  private _selected: T | null;\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(value: T | null) {\n    this._selected = value;\n    this.changeDetector.markForCheck();\n  }\n\n  private _selecteds: T[] = [];\n  get selecteds() {\n    return this._selecteds;\n  }\n\n  set selecteds(values: T[]) {\n    this._selecteds = values;\n    this.changeDetector.markForCheck();\n  }\n\n  /** The minimum selectable date. */\n  get minDateTime(): T | null {\n    return this._dtInput && this._dtInput.min;\n  }\n\n  /** The maximum selectable date. */\n  get maxDateTime(): T | null {\n    return this._dtInput && this._dtInput.max;\n  }\n\n  get dateTimeFilter(): (date: T | null) => boolean {\n    return this._dtInput && this._dtInput.dateTimeFilter;\n  }\n\n  get selectMode(): SelectMode {\n    return this._dtInput.selectMode;\n  }\n\n  get isInSingleMode(): boolean {\n    return this._dtInput.isInSingleMode;\n  }\n\n  get isInRangeMode(): boolean {\n    return this._dtInput.isInRangeMode;\n  }\n\n  private defaultScrollStrategy: () => ScrollStrategy;\n\n  constructor(\n    private overlay: Overlay,\n    private viewContainerRef: ViewContainerRef,\n    private dialogService: OwlDialogService,\n    private ngZone: NgZone,\n    protected changeDetector: ChangeDetectorRef,\n    @Optional() protected override dateTimeAdapter: DateTimeAdapter<T>,\n    @Inject(OWL_DTPICKER_SCROLL_STRATEGY) defaultScrollStrategy: any,\n    @Optional()\n    @Inject(OWL_DATE_TIME_FORMATS)\n    protected override dateTimeFormats: OwlDateTimeFormats,\n    @Optional()\n    @Inject(DOCUMENT)\n    private document: any\n  ) {\n    super(dateTimeAdapter, dateTimeFormats);\n    this.defaultScrollStrategy = defaultScrollStrategy;\n  }\n\n  public ngOnInit() {}\n\n  public ngOnDestroy(): void {\n    this.close();\n    this.dtInputSub.unsubscribe();\n    this.disabledChange.complete();\n\n    if (this.popupRef) {\n      this.popupRef.dispose();\n    }\n  }\n\n  public registerInput(input: OwlDateTimeInputDirective<T>): void {\n    if (this._dtInput) {\n      throw Error('A Owl DateTimePicker can only be associated with a single input.');\n    }\n\n    this._dtInput = input;\n    this.dtInputSub = this._dtInput.valueChange.subscribe((value: T[] | T | null) => {\n      if (Array.isArray(value)) {\n        this.selecteds = value;\n      } else {\n        this.selected = value;\n      }\n    });\n  }\n\n  public open(): void {\n    if (this._opened || this.disabled) {\n      return;\n    }\n\n    if (!this._dtInput) {\n      throw Error('Attempted to open an DateTimePicker with no associated input.');\n    }\n\n    if (this.document) {\n      this.focusedElementBeforeOpen = this.document.activeElement;\n    }\n\n    // reset the picker selected value\n    if (this.isInSingleMode) {\n      this.selected = this._dtInput.value;\n    } else if (this.isInRangeMode) {\n      this.selecteds = this._dtInput.values;\n    }\n\n    // when the picker is open , we make sure the picker's current selected time value\n    // is the same as the _startAt time value.\n    if (this.selected && this.pickerType !== 'calendar' && this._startAt) {\n      this.selected = this.dateTimeAdapter.createDate(\n        this.dateTimeAdapter.getYear(this.selected),\n        this.dateTimeAdapter.getMonth(this.selected),\n        this.dateTimeAdapter.getDate(this.selected),\n        this.dateTimeAdapter.getHours(this._startAt),\n        this.dateTimeAdapter.getMinutes(this._startAt),\n        this.dateTimeAdapter.getSeconds(this._startAt),\n        this.dateTimeAdapter.getMilliseconds(this._startAt)\n      );\n    }\n\n    this.pickerMode === 'dialog' ? this.openAsDialog() : this.openAsPopup();\n\n    this.pickerContainer.picker = this;\n\n    // Listen to picker container's hidePickerStream\n    this.hidePickerStreamSub = this.pickerContainer.hidePickerStream.subscribe(() => {\n      this.close();\n    });\n\n    // Listen to picker container's confirmSelectedStream\n    this.confirmSelectedStreamSub = this.pickerContainer.confirmSelectedStream.subscribe(\n      (event: any) => {\n        this.confirmSelect(event);\n      }\n    );\n  }\n\n  /**\n   * Selects the given date\n   */\n  public select(date: T[] | T): void {\n    if (Array.isArray(date)) {\n      this.selecteds = [...date];\n    } else {\n      this.selected = date;\n    }\n\n    /**\n     * Cases in which automatically confirm the select when date or dates are selected:\n     * 1) picker mode is NOT 'dialog'\n     * 2) picker type is 'calendar' and selectMode is 'single'.\n     * 3) picker type is 'calendar' and selectMode is 'range' and\n     *    the 'selecteds' has 'from'(selecteds[0]) and 'to'(selecteds[1]) values.\n     * 4) selectMode is 'rangeFrom' and selecteds[0] has value.\n     * 5) selectMode is 'rangeTo' and selecteds[1] has value.\n     */\n    if (\n      this.pickerMode !== 'dialog' &&\n      this.pickerType === 'calendar' &&\n      ((this.selectMode === 'single' && this.selected) ||\n        (this.selectMode === 'rangeFrom' && this.selecteds[0]) ||\n        (this.selectMode === 'rangeTo' && this.selecteds[1]) ||\n        (this.selectMode === 'range' && this.selecteds[0] && this.selecteds[1]))\n    ) {\n      this.confirmSelect();\n    }\n  }\n\n  /**\n   * Emits the selected year in multi-year view\n   */\n  public selectYear(normalizedYear: T): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /**\n   * Emits selected month in year view\n   */\n  public selectMonth(normalizedMonth: T): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /**\n   * Hide the picker\n   */\n  public close(): void {\n    if (!this._opened) {\n      return;\n    }\n\n    if (this.popupRef && this.popupRef.hasAttached()) {\n      this.popupRef.detach();\n    }\n\n    if (this.pickerContainerPortal && this.pickerContainerPortal.isAttached) {\n      this.pickerContainerPortal.detach();\n    }\n\n    if (this.hidePickerStreamSub) {\n      this.hidePickerStreamSub.unsubscribe();\n      this.hidePickerStreamSub = null;\n    }\n\n    if (this.confirmSelectedStreamSub) {\n      this.confirmSelectedStreamSub.unsubscribe();\n      this.confirmSelectedStreamSub = null;\n    }\n\n    if (this.pickerOpenedStreamSub) {\n      this.pickerOpenedStreamSub.unsubscribe();\n      this.pickerOpenedStreamSub = null;\n    }\n\n    if (this.dialogRef) {\n      this.dialogRef.close();\n      this.dialogRef = null;\n    }\n\n    const completeClose = () => {\n      if (this._opened) {\n        this._opened = false;\n        this.afterPickerClosed.emit(null);\n        this.focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (\n      this.focusedElementBeforeOpen &&\n      typeof this.focusedElementBeforeOpen.focus === 'function'\n    ) {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this.focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /**\n   * Confirm the selected value\n   */\n  public confirmSelect(event?: any): void {\n    if (this.isInSingleMode) {\n      const selected = this.selected || this.startAt || this.dateTimeAdapter.now();\n      this.confirmSelectedChange.emit(selected);\n    } else if (this.isInRangeMode) {\n      this.confirmSelectedChange.emit(this.selecteds);\n    }\n\n    this.close();\n    return;\n  }\n\n  /**\n   * Open the picker as a dialog\n   */\n  private openAsDialog(): void {\n    this.dialogRef = this.dialogService.open(OwlDateTimeContainerComponent, {\n      autoFocus: false,\n      backdropClass: ['cdk-overlay-dark-backdrop', ...coerceArray(this.backdropClass)],\n      paneClass: ['owl-dt-dialog', ...coerceArray(this.panelClass)],\n      viewContainerRef: this.viewContainerRef,\n      scrollStrategy: this.scrollStrategy || this.defaultScrollStrategy()\n    });\n    this.pickerContainer = this.dialogRef.componentInstance;\n\n    this.dialogRef.afterOpen().subscribe(() => {\n      this.afterPickerOpen.emit(null);\n      this._opened = true;\n    });\n    this.dialogRef.afterClosed().subscribe(() => this.close());\n  }\n\n  /**\n   * Open the picker as popup\n   */\n  private openAsPopup(): void {\n    if (!this.pickerContainerPortal) {\n      this.pickerContainerPortal = new ComponentPortal<OwlDateTimeContainerComponent<T>>(\n        OwlDateTimeContainerComponent,\n        this.viewContainerRef\n      );\n    }\n\n    if (!this.popupRef) {\n      this.createPopup();\n    }\n\n    if (!this.popupRef.hasAttached()) {\n      const componentRef: ComponentRef<OwlDateTimeContainerComponent<T>> = this.popupRef.attach(\n        this.pickerContainerPortal\n      );\n      this.pickerContainer = componentRef.instance;\n\n      // Update the position once the calendar has rendered.\n      this.ngZone.onStable\n        .asObservable()\n        .pipe(take(1))\n        .subscribe(() => {\n          this.popupRef.updatePosition();\n        });\n\n      // emit open stream\n      this.pickerOpenedStreamSub = this.pickerContainer.pickerOpenedStream\n        .pipe(take(1))\n        .subscribe(() => {\n          this.afterPickerOpen.emit(null);\n          this._opened = true;\n        });\n    }\n  }\n\n  private createPopup(): void {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this.createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: ['cdk-overlay-transparent-backdrop', ...coerceArray(this.backdropClass)],\n      scrollStrategy: this.scrollStrategy || this.defaultScrollStrategy(),\n      panelClass: ['owl-dt-popup', ...coerceArray(this.panelClass)]\n    });\n\n    this.popupRef = this.overlay.create(overlayConfig);\n\n    merge(\n      this.popupRef.backdropClick(),\n      this.popupRef.detachments(),\n      this.popupRef\n        .keydownEvents()\n        .pipe(\n          filter(\n            event =>\n              event.keyCode === ESCAPE ||\n              (this._dtInput && event.altKey && event.keyCode === UP_ARROW)\n          )\n        )\n    ).subscribe(() => this.close());\n  }\n\n  /**\n   * Create the popup PositionStrategy.\n   */\n  private createPopupPositionStrategy(): PositionStrategy {\n    return this.overlay\n      .position()\n      .flexibleConnectedTo(this._dtInput.elementRef)\n      .withTransformOriginOn('.owl-dt-container')\n      .withFlexibleDimensions(false)\n      .withPush(false)\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'top'\n        },\n        {\n          originX: 'end',\n          originY: 'top',\n          overlayX: 'end',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'top',\n          offsetY: -176\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'top',\n          offsetY: -352\n        }\n      ]);\n  }\n}\n","","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { DateTimeAdapter } from '../adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from '../adapter/date-time-format.class';\nimport { OwlDateTimeComponent } from './date-time-picker.component';\nimport { SelectMode } from './date-time.class';\n\nexport const OWL_DATETIME_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => OwlDateTimeInputDirective),\n  multi: true\n};\n\nexport const OWL_DATETIME_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => OwlDateTimeInputDirective),\n  multi: true\n};\n\n@Directive({\n  selector: 'input[owlDateTime]',\n  exportAs: 'owlDateTimeInput',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '(keydown)': 'handleKeydownOnHost($event)',\n    '(blur)': 'handleBlurOnHost($event)',\n    '(input)': 'handleInputOnHost($event)',\n    '(change)': 'handleChangeOnHost($event)',\n    '[attr.aria-haspopup]': 'owlDateTimeInputAriaHaspopup',\n    '[attr.aria-owns]': 'owlDateTimeInputAriaOwns',\n    '[attr.min]': 'minIso8601',\n    '[attr.max]': 'maxIso8601',\n    '[disabled]': 'owlDateTimeInputDisabled'\n  },\n  providers: [OWL_DATETIME_VALUE_ACCESSOR, OWL_DATETIME_VALIDATORS]\n})\nexport class OwlDateTimeInputDirective<T>\n  implements OnInit, AfterContentInit, OnDestroy, ControlValueAccessor, Validator\n{\n  /**\n   * The date time picker that this input is associated with.\n   */\n  @Input()\n  set owlDateTime(value: OwlDateTimeComponent<T>) {\n    this.registerDateTimePicker(value);\n  }\n\n  /**\n   * A function to filter date time\n   */\n  @Input()\n  set owlDateTimeFilter(filter: (date: T | null) => boolean) {\n    this._dateTimeFilter = filter;\n    this.validatorOnChange();\n  }\n\n  private _dateTimeFilter: (date: T | null) => boolean;\n  get dateTimeFilter() {\n    return this._dateTimeFilter;\n  }\n\n  /** Whether the date time picker's input is disabled. */\n  @Input()\n  private _disabled: boolean;\n  get disabled() {\n    return !!this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    const element = this.elmRef.nativeElement;\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this.disabledChange.emit(newValue);\n    }\n\n    // We need to null check the `blur` method, because it's undefined during SSR.\n    if (newValue && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n\n  /** The minimum valid date. */\n  private _min: T | null = this.dateTimeAdapter?.createDate(1, 0, 1, 0, 0, 0);;\n  @Input()\n  get min(): T | null {\n    return this._min;\n  }\n\n  set min(value: T | null) {\n    this._min = this.getValidDate(this.dateTimeAdapter.deserialize(value));\n    this.validatorOnChange();\n  }\n\n  /** The maximum valid date. */\n  private _max: T | null = this.dateTimeAdapter?.createDate(3000, 11, 31, 23, 59, 59);\n  @Input()\n  get max(): T | null {\n    return this._max;\n  }\n\n  set max(value: T | null) {\n    this._max = this.getValidDate(this.dateTimeAdapter.deserialize(value));\n    this.validatorOnChange();\n  }\n\n  /**\n   * The picker's select mode\n   */\n  private _selectMode: SelectMode = 'single';\n  @Input()\n  get selectMode() {\n    return this._selectMode;\n  }\n\n  set selectMode(mode: SelectMode) {\n    if (mode !== 'single' && mode !== 'range' && mode !== 'rangeFrom' && mode !== 'rangeTo') {\n      throw Error('OwlDateTime Error: invalid selectMode value!');\n    }\n\n    this._selectMode = mode;\n  }\n\n  /**\n   * The character to separate the 'from' and 'to' in input value\n   */\n  @Input()\n  rangeSeparator = '-';\n\n  private _value: T | null;\n  @Input()\n  get value() {\n    return this._value;\n  }\n\n  set value(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    this.lastValueValid = !value || this.dateTimeAdapter.isValid(value);\n    value = this.getValidDate(value);\n    const oldDate = this._value;\n    this._value = value;\n\n    // set the input property 'value'\n    this.formatNativeInputValue();\n\n    // check if the input value changed\n    if (!this.dateTimeAdapter.sameDate(oldDate, value)) {\n      this.valueChange.emit(value);\n    }\n  }\n\n  private _values: T[] = [];\n  @Input()\n  get values() {\n    return this._values;\n  }\n\n  set values(values: T[]) {\n    if (values && values.length > 0) {\n      this._values = values.map(v => {\n        v = this.dateTimeAdapter.deserialize(v);\n        return this.getValidDate(v);\n      });\n      this.lastValueValid =\n        (!this._values[0] || this.dateTimeAdapter.isValid(this._values[0])) &&\n        (!this._values[1] || this.dateTimeAdapter.isValid(this._values[1]));\n    } else {\n      this._values = [];\n      this.lastValueValid = true;\n    }\n\n    // set the input property 'value'\n    this.formatNativeInputValue();\n\n    this.valueChange.emit(this._values);\n  }\n\n  /**\n   * Callback to invoke when `change` event is fired on this `<input>`\n   */\n  @Output()\n  dateTimeChange = new EventEmitter<any>();\n\n  /**\n   * Callback to invoke when an `input` event is fired on this `<input>`.\n   */\n  @Output()\n  dateTimeInput = new EventEmitter<any>();\n\n  get elementRef(): ElementRef {\n    return this.elmRef;\n  }\n\n  get isInSingleMode(): boolean {\n    return this._selectMode === 'single';\n  }\n\n  get isInRangeMode(): boolean {\n    return (\n      this._selectMode === 'range' ||\n      this._selectMode === 'rangeFrom' ||\n      this._selectMode === 'rangeTo'\n    );\n  }\n\n  /** The date-time-picker that this input is associated with. */\n  public dtPicker: OwlDateTimeComponent<T>;\n\n  private dtPickerSub: Subscription = Subscription.EMPTY;\n  private localeSub: Subscription = Subscription.EMPTY;\n\n  private lastValueValid = true;\n\n  private onModelChange = (date: T[] | T) => {};\n  private onModelTouched = () => {};\n  private validatorOnChange = () => {};\n\n  /** The form control validator for whether the input parses. */\n  private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    const value = this.elmRef.nativeElement.value;\n    if (!value) return null;\n\n    return this.lastValueValid\n      ? null\n      : { owlDateTimeParse: { text: value } };\n  };\n\n  /** The form control validator for the min date. */\n  private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (this.isInSingleMode) {\n      const controlValue = this.getValidDate(this.dateTimeAdapter.deserialize(control.value));\n      return !this.min ||\n        !controlValue ||\n        this.dateTimeAdapter.compareDate(this.min, controlValue) <= 0\n        ? null\n        : { owlDateTimeMin: { min: this.min, actual: controlValue } };\n    } else if (this.isInRangeMode && control.value) {\n      const controlValueFrom = this.getValidDate(\n        this.dateTimeAdapter.deserialize(control.value[0])\n      );\n      const controlValueTo = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[1]));\n      return !this.min ||\n        !controlValueFrom ||\n        !controlValueTo ||\n        this.dateTimeAdapter.compareDate(this.min, controlValueFrom) <= 0\n        ? null\n        : {\n            owlDateTimeMin: {\n              min: this.min,\n              actual: [controlValueFrom, controlValueTo]\n            }\n          };\n    }\n    return null;\n  };\n\n  /** The form control validator for the max date. */\n  private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (this.isInSingleMode) {\n      const controlValue = this.getValidDate(this.dateTimeAdapter.deserialize(control.value));\n      return !this.max ||\n        !controlValue ||\n        this.dateTimeAdapter.compareDate(this.max, controlValue) >= 0\n        ? null\n        : { owlDateTimeMax: { max: this.max, actual: controlValue } };\n    } else if (this.isInRangeMode && control.value) {\n      const controlValueFrom = this.getValidDate(\n        this.dateTimeAdapter.deserialize(control.value[0])\n      );\n      const controlValueTo = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[1]));\n      return !this.max ||\n        !controlValueFrom ||\n        !controlValueTo ||\n        this.dateTimeAdapter.compareDate(this.max, controlValueTo) >= 0\n        ? null\n        : {\n            owlDateTimeMax: {\n              max: this.max,\n              actual: [controlValueFrom, controlValueTo]\n            }\n          };\n    }\n    return null;\n  };\n\n  /** The form control validator for the date filter. */\n  private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this.getValidDate(this.dateTimeAdapter.deserialize(control.value));\n    return !this._dateTimeFilter || !controlValue || this._dateTimeFilter(controlValue)\n      ? null\n      : { owlDateTimeFilter: true };\n  };\n\n  /**\n   * The form control validator for the range.\n   * Check whether the 'before' value is before the 'to' value\n   */\n  private rangeValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (this.isInSingleMode || !control.value) {\n      return null;\n    }\n\n    const controlValueFrom = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[0]));\n    const controlValueTo = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[1]));\n\n    return !controlValueFrom ||\n      !controlValueTo ||\n      this.dateTimeAdapter.compareDate(controlValueFrom, controlValueTo) <= 0\n      ? null\n      : { owlDateTimeRange: true };\n  };\n\n  /** The combined form control validator for this input. */\n  private validator: ValidatorFn | null = Validators.compose([\n    this.parseValidator,\n    this.minValidator,\n    this.maxValidator,\n    this.filterValidator,\n    this.rangeValidator\n  ]);\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  valueChange = new EventEmitter<T[] | T | null>();\n\n  /** Emits when the disabled state has changed */\n  disabledChange = new EventEmitter<boolean>();\n\n  get owlDateTimeInputAriaHaspopup(): boolean {\n    return true;\n  }\n\n  get owlDateTimeInputAriaOwns(): string {\n    return (this.dtPicker.opened && this.dtPicker.id) || null;\n  }\n\n  get minIso8601(): string {\n    return this.min ? this.dateTimeAdapter.toIso8601(this.min) : null;\n  }\n\n  get maxIso8601(): string {\n    return this.max ? this.dateTimeAdapter.toIso8601(this.max) : null;\n  }\n\n  get owlDateTimeInputDisabled(): boolean {\n    return this.disabled;\n  }\n\n  constructor(\n    private elmRef: ElementRef,\n    private renderer: Renderer2,\n    @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\n    @Optional()\n    @Inject(OWL_DATE_TIME_FORMATS)\n    private dateTimeFormats: OwlDateTimeFormats\n  ) {\n    if (!this.dateTimeAdapter) {\n      throw Error(\n        `OwlDateTimePicker: No provider found for DateTimePicker. You must import one of the following ` +\n          `modules at your application root: OwlNativeDateTimeModule or provide a ` +\n          `custom implementation.`\n      );\n    }\n\n    if (!this.dateTimeFormats) {\n      throw Error(\n        `OwlDateTimePicker: No provider found for OWL_DATE_TIME_FORMATS. You must import one of the following ` +\n          `modules at your application root: OwlNativeDateTimeModule or provide a ` +\n          `custom implementation.`\n      );\n    }\n\n    this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(() => {\n      this.value = this.value;\n    });\n  }\n\n  public ngOnInit(): void {\n    if (!this.dtPicker) {\n      throw Error(\n        `OwlDateTimePicker: the picker input doesn't have any associated owl-date-time component`\n      );\n    }\n  }\n\n  public ngAfterContentInit(): void {\n    this.dtPickerSub = this.dtPicker.confirmSelectedChange.subscribe((selecteds: T[] | T) => {\n      if (Array.isArray(selecteds)) {\n        this.values = selecteds;\n      } else {\n        this.value = selecteds;\n      }\n\n      this.onModelChange(selecteds);\n      this.onModelTouched();\n      this.dateTimeChange.emit({\n        source: this,\n        value: selecteds,\n        input: this.elmRef.nativeElement\n      });\n      this.dateTimeInput.emit({\n        source: this,\n        value: selecteds,\n        input: this.elmRef.nativeElement\n      });\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this.dtPickerSub.unsubscribe();\n    this.localeSub.unsubscribe();\n    this.valueChange.complete();\n    this.disabledChange.complete();\n  }\n\n  public writeValue(value: any): void {\n    if (this.isInSingleMode) {\n      this.value = value;\n    } else {\n      this.values = value;\n    }\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  public validate(c: AbstractControl): { [key: string]: any } {\n    return this.validator ? this.validator(c) : null;\n  }\n\n  public registerOnValidatorChange(fn: () => void): void {\n    this.validatorOnChange = fn;\n  }\n\n  /**\n   * Open the picker when user hold alt + DOWN_ARROW\n   */\n  public handleKeydownOnHost(event: KeyboardEvent): void {\n    if (event.altKey && event.keyCode === DOWN_ARROW) {\n      this.dtPicker.open();\n      event.preventDefault();\n    }\n  }\n\n  public handleBlurOnHost(event: Event): void {\n    this.onModelTouched();\n  }\n\n  public handleInputOnHost(event: any): void {\n    const value = event.target.value;\n    if (this._selectMode === 'single') {\n      this.changeInputInSingleMode(value);\n    } else if (this._selectMode === 'range') {\n      this.changeInputInRangeMode(value);\n    } else {\n      this.changeInputInRangeFromToMode(value);\n    }\n    this.validatorOnChange();\n  }\n\n  public handleChangeOnHost(event: any): void {\n    let v;\n    if (this.isInSingleMode) {\n      v = this.value;\n    } else if (this.isInRangeMode) {\n      v = this.values;\n    }\n\n    this.dateTimeChange.emit({\n      source: this,\n      value: v,\n      input: this.elmRef.nativeElement\n    });\n  }\n\n  /**\n   * Set the native input property 'value'\n   */\n  public formatNativeInputValue(): void {\n    if (this.isInSingleMode) {\n      this.renderer.setProperty(\n        this.elmRef.nativeElement,\n        'value',\n        this._value ? this.dateTimeAdapter.format(this._value, this.dtPicker.formatString) : ''\n      );\n    } else if (this.isInRangeMode) {\n      if (this._values && this.values.length > 0) {\n        const from = this._values[0];\n        const to = this._values[1];\n\n        const fromFormatted = from\n          ? this.dateTimeAdapter.format(from, this.dtPicker.formatString)\n          : '';\n        const toFormatted = to ? this.dateTimeAdapter.format(to, this.dtPicker.formatString) : '';\n\n        if (!fromFormatted && !toFormatted) {\n          this.renderer.setProperty(this.elmRef.nativeElement, 'value', null);\n        } else {\n          if (this._selectMode === 'range') {\n            this.renderer.setProperty(\n              this.elmRef.nativeElement,\n              'value',\n              `${fromFormatted} ${this.rangeSeparator} ${toFormatted}`\n            );\n          } else if (this._selectMode === 'rangeFrom') {\n            this.renderer.setProperty(this.elmRef.nativeElement, 'value', fromFormatted);\n          } else if (this._selectMode === 'rangeTo') {\n            this.renderer.setProperty(this.elmRef.nativeElement, 'value', toFormatted);\n          }\n        }\n      } else {\n        this.renderer.setProperty(this.elmRef.nativeElement, 'value', '');\n      }\n    }\n\n    return;\n  }\n\n  /**\n   * Register the relationship between this input and its picker component\n   */\n  private registerDateTimePicker(picker: OwlDateTimeComponent<T>) {\n    if (picker) {\n      this.dtPicker = picker;\n      this.dtPicker.registerInput(this);\n    }\n  }\n\n  /**\n   * Convert a given obj to a valid date object\n   */\n  private getValidDate(obj: any): T | null {\n    return this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)\n      ? obj\n      : null;\n  }\n\n  /**\n   * Convert a time string to a date-time string\n   * When pickerType is 'timer', the value in the picker's input is a time string.\n   * The dateTimeAdapter parse fn could not parse a time string to a Date Object.\n   * Therefore we need this fn to convert a time string to a date-time string.\n   */\n  private convertTimeStringToDateTimeString(timeString: string, dateTime: T): string | null {\n    if (timeString) {\n      const v = dateTime || this.dateTimeAdapter.now();\n      const dateString = this.dateTimeAdapter.format(v, this.dateTimeFormats.display.dateInput);\n      return dateString + ' ' + timeString;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Handle input change in single mode\n   */\n  private changeInputInSingleMode(inputValue: string): void {\n    inputValue = (inputValue || '').trim();\n    this.lastValueValid = this.dateTimeAdapter.isValidFormat(inputValue, this.dtPicker.formatString);\n\n    let value = inputValue;\n    if (this.dtPicker.pickerType === 'timer') {\n      value = this.convertTimeStringToDateTimeString(value, this.value);\n    }\n\n    let result = this.dateTimeAdapter.parse(value, this.dateTimeFormats.parse.dateTimeInput);\n    result = this.getValidDate(result);\n\n    // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\n    // result equals to null means there is input event, but the input value is invalid\n    if (!this.dateTimeAdapter.sameDate(result, this._value) || result === null) {\n      this._value = result;\n      this.valueChange.emit(result);\n      this.onModelChange(result);\n      this.dateTimeInput.emit({\n        source: this,\n        value: result,\n        input: this.elmRef.nativeElement\n      });\n    }\n  }\n\n  /**\n   * Handle input change in rangeFrom or rangeTo mode\n   */\n  private changeInputInRangeFromToMode(inputValue: string): void {\n    inputValue = (inputValue || '').trim();\n    this.lastValueValid = this.dateTimeAdapter.isValidFormat(inputValue, this.dtPicker.formatString);\n\n    const originalValue = this._selectMode === 'rangeFrom' ? this._values[0] : this._values[1];\n\n    if (this.dtPicker.pickerType === 'timer') {\n      inputValue = this.convertTimeStringToDateTimeString(inputValue, originalValue);\n    }\n\n    let result = this.dateTimeAdapter.parse(inputValue, this.dateTimeFormats.parse.dateTimeInput);\n    result = this.getValidDate(result);\n\n    // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\n    if (\n      (this._selectMode === 'rangeFrom' &&\n        this.dateTimeAdapter.sameDate(result, this._values[0]) &&\n        result) ||\n      (this._selectMode === 'rangeTo' &&\n        this.dateTimeAdapter.sameDate(result, this._values[1]) &&\n        result)\n    ) {\n      return;\n    }\n\n    this._values =\n      this._selectMode === 'rangeFrom' ? [result, this._values[1]] : [this._values[0], result];\n    this.valueChange.emit(this._values);\n    this.onModelChange(this._values);\n    this.dateTimeInput.emit({\n      source: this,\n      value: this._values,\n      input: this.elmRef.nativeElement\n    });\n  }\n\n  /**\n   * Handle input change in range mode\n   */\n  private changeInputInRangeMode(inputValue: string): void {\n    inputValue = (inputValue || '').trim();\n    const selecteds = inputValue.split(this.rangeSeparator);\n    let fromString = (selecteds[0] || '').trim();\n    let toString = (selecteds[1] || '').trim();\n\n    this.lastValueValid =\n      this.dateTimeAdapter.isValidFormat(fromString, this.dtPicker.formatString) &&\n      this.dateTimeAdapter.isValidFormat(toString, this.dtPicker.formatString);\n\n    if (this.dtPicker.pickerType === 'timer') {\n      fromString = this.convertTimeStringToDateTimeString(fromString, this.values[0]);\n      toString = this.convertTimeStringToDateTimeString(toString, this.values[1]);\n    }\n\n    let from = this.dateTimeAdapter.parse(fromString, this.dateTimeFormats.parse.dateTimeInput);\n    let to = this.dateTimeAdapter.parse(toString, this.dateTimeFormats.parse.dateTimeInput);\n    from = this.getValidDate(from);\n    to = this.getValidDate(to);\n\n    // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\n    if (\n      !this.dateTimeAdapter.sameDate(from, this._values[0]) ||\n      !this.dateTimeAdapter.sameDate(to, this._values[1]) ||\n      (from === null && to === null)\n    ) {\n      this._values = [from, to];\n      this.valueChange.emit(this._values);\n      this.onModelChange(this._values);\n      this.dateTimeInput.emit({\n        source: this,\n        value: this._values,\n        input: this.elmRef.nativeElement\n      });\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { OwlDateTime, PickerMode, PickerType, SelectMode } from './date-time.class';\nimport { DateTimeAdapter } from '../adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from '../adapter/date-time-format.class';\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\n\nexport const OWL_DATETIME_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => OwlDateTimeInlineComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'owl-date-time-inline',\n  templateUrl: './date-time-inline.component.html',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.owl-dt-inline]': 'owlDTInlineClass'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [OWL_DATETIME_VALUE_ACCESSOR]\n})\nexport class OwlDateTimeInlineComponent<T>\n  extends OwlDateTime<T>\n  implements OnInit, ControlValueAccessor\n{\n  @ViewChild(OwlDateTimeContainerComponent, { static: true })\n  container: OwlDateTimeContainerComponent<T>;\n\n  /**\n   * Set the type of the dateTime picker\n   *      'both' -- show both calendar and timer\n   *      'calendar' -- show only calendar\n   *      'timer' -- show only timer\n   */\n  private _pickerType: PickerType = 'both';\n  @Input()\n  get pickerType(): PickerType {\n    return this._pickerType;\n  }\n\n  set pickerType(val: PickerType) {\n    if (val !== this._pickerType) {\n      this._pickerType = val;\n    }\n  }\n\n  private _disabled = false;\n  @Input()\n  override get disabled(): boolean {\n    return !!this._disabled;\n  }\n\n  override set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  private _selectMode: SelectMode = 'single';\n  @Input()\n  get selectMode() {\n    return this._selectMode;\n  }\n\n  set selectMode(mode: SelectMode) {\n    if (mode !== 'single' && mode !== 'range' && mode !== 'rangeFrom' && mode !== 'rangeTo') {\n      throw Error('OwlDateTime Error: invalid selectMode value!');\n    }\n\n    this._selectMode = mode;\n  }\n\n  /** The date to open the calendar to initially. */\n  private _startAt: T | null;\n  @Input()\n  get startAt(): T | null {\n    if (this._startAt) {\n      return this._startAt;\n    }\n\n    if (this.selectMode === 'single') {\n      return this.value || null;\n    } else if (this.selectMode === 'range' || this.selectMode === 'rangeFrom') {\n      return this.values[0] || null;\n    } else if (this.selectMode === 'rangeTo') {\n      return this.values[1] || null;\n    } else {\n      return null;\n    }\n  }\n\n  set startAt(date: T | null) {\n    this._startAt = this.getValidDate(this.dateTimeAdapter.deserialize(date));\n  }\n\n  private _dateTimeFilter: (date: T | null) => boolean;\n  @Input('owlDateTimeFilter')\n  get dateTimeFilter() {\n    return this._dateTimeFilter;\n  }\n\n  set dateTimeFilter(filter: (date: T | null) => boolean) {\n    this._dateTimeFilter = filter;\n  }\n\n  /** The minimum valid date. */\n  private _min: T | null;\n\n  get minDateTime(): T | null {\n    return this._min || null;\n  }\n\n  @Input('min')\n  set minDateTime(value: T | null) {\n    this._min = this.getValidDate(this.dateTimeAdapter.deserialize(value));\n    this.changeDetector.markForCheck();\n  }\n\n  /** The maximum valid date. */\n  private _max: T | null;\n\n  get maxDateTime(): T | null {\n    return this._max || null;\n  }\n\n  @Input('max')\n  set maxDateTime(value: T | null) {\n    this._max = this.getValidDate(this.dateTimeAdapter.deserialize(value));\n    this.changeDetector.markForCheck();\n  }\n\n  private _value: T | null;\n  @Input()\n  get value() {\n    return this._value;\n  }\n\n  set value(value: T | null) {\n    value = this.dateTimeAdapter.deserialize(value);\n    value = this.getValidDate(value);\n    this._value = value;\n    this.selected = value;\n  }\n\n  private _values: T[] = [];\n  @Input()\n  get values() {\n    return this._values;\n  }\n\n  set values(values: T[]) {\n    if (values && values.length > 0) {\n      values = values.map(v => {\n        v = this.dateTimeAdapter.deserialize(v);\n        v = this.getValidDate(v);\n        return v ? this.dateTimeAdapter.clone(v) : null;\n      });\n      this._values = [...values];\n      this.selecteds = [...values];\n    } else {\n      this._values = [];\n      this.selecteds = [];\n    }\n  }\n\n  /**\n   * Emits selected year in multi-year view\n   * This doesn't imply a change on the selected date.\n   */\n  @Output()\n  yearSelected = new EventEmitter<T>();\n\n  /**\n   * Emits selected month in year view\n   * This doesn't imply a change on the selected date.\n   */\n  @Output()\n  monthSelected = new EventEmitter<T>();\n\n  private _selected: T | null;\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(value: T | null) {\n    this._selected = value;\n    this.changeDetector.markForCheck();\n  }\n\n  private _selecteds: T[] = [];\n  get selecteds() {\n    return this._selecteds;\n  }\n\n  set selecteds(values: T[]) {\n    this._selecteds = values;\n    this.changeDetector.markForCheck();\n  }\n\n  get opened(): boolean {\n    return true;\n  }\n\n  get pickerMode(): PickerMode {\n    return 'inline';\n  }\n\n  get isInSingleMode(): boolean {\n    return this._selectMode === 'single';\n  }\n\n  get isInRangeMode(): boolean {\n    return (\n      this._selectMode === 'range' ||\n      this._selectMode === 'rangeFrom' ||\n      this._selectMode === 'rangeTo'\n    );\n  }\n\n  get owlDTInlineClass(): boolean {\n    return true;\n  }\n\n  private onModelChange = (date: T[] | T) => {};\n  private onModelTouched = () => {};\n\n  constructor(\n    protected changeDetector: ChangeDetectorRef,\n    @Optional() protected override dateTimeAdapter: DateTimeAdapter<T>,\n    @Optional()\n    @Inject(OWL_DATE_TIME_FORMATS)\n    protected override dateTimeFormats: OwlDateTimeFormats\n  ) {\n    super(dateTimeAdapter, dateTimeFormats);\n  }\n\n  public ngOnInit() {\n    this.container.picker = this;\n  }\n\n  public writeValue(value: any): void {\n    if (this.isInSingleMode) {\n      this.value = value;\n      this.container.pickerMoment = value;\n    } else {\n      this.values = value;\n      this.container.pickerMoment = this._values[this.container.activeSelectedIndex];\n    }\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  public select(date: T[] | T): void {\n    if (this.disabled) {\n      return;\n    }\n\n    if (Array.isArray(date)) {\n      this.values = [...date];\n    } else {\n      this.value = date;\n    }\n    this.onModelChange(date);\n    this.onModelTouched();\n  }\n\n  /**\n   * Emits the selected year in multi-year view\n   */\n  public selectYear(normalizedYear: T): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /**\n   * Emits selected month in year view\n   */\n  public selectMonth(normalizedMonth: T): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n}\n","<owl-date-time-container></owl-date-time-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OWL_DIALOG_SCROLL_STRATEGY_PROVIDER, OwlDialogService } from './dialog.service';\nimport { OwlDialogContainerComponent } from './dialog-container.component';\n\n@NgModule({\n  imports: [CommonModule, A11yModule, OverlayModule, PortalModule],\n  exports: [],\n  declarations: [OwlDialogContainerComponent],\n  providers: [OWL_DIALOG_SCROLL_STRATEGY_PROVIDER, OwlDialogService]\n})\nexport class OwlDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { OwlDateTimeTriggerDirective } from './date-time-picker-trigger.directive';\nimport {\n  OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER,\n  OwlDateTimeComponent\n} from './date-time-picker.component';\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\nimport { OwlDateTimeInputDirective } from './date-time-picker-input.directive';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\nimport { OwlMonthViewComponent } from './calendar-month-view.component';\nimport { OwlCalendarBodyComponent } from './calendar-body.component';\nimport { OwlYearViewComponent } from './calendar-year-view.component';\nimport { OwlMultiYearViewComponent } from './calendar-multi-year-view.component';\nimport { OwlTimerBoxComponent } from './timer-box.component';\nimport { OwlTimerComponent } from './timer.component';\nimport { NumberFixedLenPipe } from './numberedFixLen.pipe';\nimport { OwlCalendarComponent } from './calendar.component';\nimport { OwlDateTimeInlineComponent } from './date-time-inline.component';\nimport { OwlDialogModule } from '../dialog/dialog.module';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, OwlDialogModule, A11yModule],\n  exports: [\n    OwlCalendarComponent,\n    OwlTimerComponent,\n    OwlDateTimeTriggerDirective,\n    OwlDateTimeInputDirective,\n    OwlDateTimeComponent,\n    OwlDateTimeInlineComponent,\n    OwlMultiYearViewComponent,\n    OwlYearViewComponent,\n    OwlMonthViewComponent\n  ],\n  declarations: [\n    OwlDateTimeTriggerDirective,\n    OwlDateTimeInputDirective,\n    OwlDateTimeComponent,\n    OwlDateTimeContainerComponent,\n    OwlMultiYearViewComponent,\n    OwlYearViewComponent,\n    OwlMonthViewComponent,\n    OwlTimerComponent,\n    OwlTimerBoxComponent,\n    OwlCalendarComponent,\n    OwlCalendarBodyComponent,\n    NumberFixedLenPipe,\n    OwlDateTimeInlineComponent\n  ],\n  providers: [OwlDateTimeIntl, OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER]\n})\nexport class OwlDateTimeModule {}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DateTimeAdapter, OWL_DATE_TIME_LOCALE } from '../date-time-adapter.class';\nimport { getLocaleFirstDayOfWeek } from '@angular/common';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API: boolean;\n\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  SUPPORTS_INTL_API = typeof Intl !== 'undefined';\n} catch {\n  SUPPORTS_INTL_API = false;\n}\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  long: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ],\n  short: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n  /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateTimeAdapter extends DateTimeAdapter<Date> {\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   *\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n   * getting the string representation of a Date object from its utc representation. We're keeping\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\n   * though.\n   */\n  useUtcForDisplay = true;\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n  private readonly _clampDate: boolean;\n\n  constructor(\n    @Optional() @Inject(OWL_DATE_TIME_LOCALE) owlDateTimeLocale: string,\n    platform: Platform\n  ) {\n    super();\n    super.setLocale(owlDateTimeLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        month: style,\n        timeZone: 'utc'\n      });\n      return range(12, i =>\n        this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))\n      );\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        day: 'numeric',\n        timeZone: 'utc'\n      });\n      return range(31, i =>\n        this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))\n      );\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        weekday: style,\n        timeZone: 'utc'\n      });\n      return range(7, i =>\n        this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))\n      );\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        year: 'numeric',\n        timeZone: 'utc'\n      });\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    return getLocaleFirstDayOfWeek(this.locale);\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(\n      this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0)\n    );\n  }\n\n  getHours(date: Date): number {\n    return date.getHours();\n  }\n\n  getMinutes(date: Date): number {\n    return date.getMinutes();\n  }\n\n  getSeconds(date: Date): number {\n    return date.getSeconds();\n  }\n\n  getMilliseconds(date: Date): number {\n    return date.getMilliseconds();\n  }\n\n  getTime(date: Date): number {\n    return date.getTime();\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(\n    year: number,\n    month: number,\n    date: number,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n    ms = 0\n  ): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    if (hours < 0 || hours > 23) {\n      throw Error(`Invalid hours \"${hours}\". Hours has to be between 0 and 23.`);\n    }\n\n    if (minutes < 0 || minutes > 59) {\n      throw Error(`Invalid minutes \"${minutes}\". Minutes has to between 0 and 59.`);\n    }\n\n    if (seconds < 0 || seconds > 59) {\n      throw Error(`Invalid seconds \"${seconds}\". Seconds has to be between 0 and 59.`);\n    }\n\n    if (ms < 0 || ms > 999) {\n      throw Error(`Invalid milliseconds \"${ms}\". Milliseconds has to be between 0 and 999.`);\n    }\n\n    const result = this._createDateWithOverflow(year, month, date, hours, minutes, seconds, ms);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    // For example, createDate(2017, 1, 31) would try to create a date 2017/02/31 which is invalid\n    if (result.getMonth() !== month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  now(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value === 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = { ...displayFormat, timeZone: 'utc' };\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n      this.getYear(date),\n      this.getMonth(date) + months,\n      this.getDate(date),\n      this.getHours(date),\n      this.getMinutes(date),\n      this.getSeconds(date),\n      this.getMilliseconds(date)\n    );\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) !== (((this.getMonth(date) + months) % 12) + 12) % 12) {\n      newDate = this._createDateWithOverflow(\n        this.getYear(newDate),\n        this.getMonth(newDate),\n        0,\n        this.getHours(newDate),\n        this.getMinutes(newDate),\n        this.getSeconds(newDate),\n        this.getMilliseconds(newDate)\n      );\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n      this.getYear(date),\n      this.getMonth(date),\n      this.getDate(date) + days,\n      this.getHours(date),\n      this.getMinutes(date),\n      this.getSeconds(date),\n      this.getMilliseconds(date)\n    );\n  }\n\n  addTimerHours(date: Date, hours: number): Date {\n    return this._createDateWithOverflow(\n      this.getYear(date),\n      this.getMonth(date),\n      this.getDate(date),\n      this.getHours(date) + hours,\n      this.getMinutes(date),\n      this.getSeconds(date),\n      this.getMilliseconds(date)\n    );\n  }\n\n  addTimerMinutes(date: Date, minutes: number): Date {\n    return this._createDateWithOverflow(\n      this.getYear(date),\n      this.getMonth(date),\n      this.getDate(date),\n      this.getHours(date),\n      this.getMinutes(date) + minutes,\n      this.getSeconds(date),\n      this.getMilliseconds(date)\n    );\n  }\n\n  addTimerSeconds(date: Date, seconds: number): Date {\n    return this._createDateWithOverflow(\n      this.getYear(date),\n      this.getMonth(date),\n      this.getDate(date),\n      this.getHours(date),\n      this.getMinutes(date),\n      this.getSeconds(date) + seconds,\n      this.getMilliseconds(date)\n    );\n  }\n\n  addTimerMilliseconds(date: Date, milliseconds: number): Date {\n    return this._createDateWithOverflow(\n      this.getYear(date),\n      this.getMonth(date),\n      this.getDate(date),\n      this.getHours(date),\n      this.getMinutes(date),\n      this.getSeconds(date),\n      this.getMilliseconds(date) + milliseconds\n    );\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return date && !isNaN(date.getTime());\n  }\n\n  isValidFormat(value: any, parseFormat: any): boolean {\n    if (SUPPORTS_INTL_API) {\n      parseFormat = { ...parseFormat, timeZone: 'utc' };\n      const dtf = new Intl.DateTimeFormat(this.locale, parseFormat);\n      const parts = dtf.formatToParts();\n      let regex = '^';\n      for (const part of parts) {\n        switch (part.type) {\n          case 'day':\n            regex += '([1-9]{1}|[0]{1}[1-9]{1}|[1-2]{1}[0-9]{1}|3[0-1]{1})';\n            break;\n          case 'month':\n            regex += '([1-9]|0[1-9]|1[0-2])';\n            break;\n          case 'year':\n            regex += '([0-9]{1,4})';\n            break;\n          case 'hour':\n            if (dtf.resolvedOptions().hour12) {\n              regex += '(0?[1-9]|1[012])';\n            } else {\n              regex += '([01]?[0-9]|2[0-3])';\n            }\n            break;\n          case 'second':\n          case 'minute':\n            regex += '([0-9]{1}|[0-5][0-9])';\n            break;\n          case 'dayPeriod':\n            regex += '((a|A)(m|M)?|(p|P)(m|M)?)';\n            break;\n          case 'literal':\n            regex += part.value.replace('/', '\\\\/').replace('.', '\\\\.');\n            break;\n        }\n      }\n      regex += '$';\n\n      return (new RegExp(regex)).test(value);\n    } else {\n      const date = new Date(value);\n      return date.getTime() === date.getTime();\n    }\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  public differenceInCalendarDays(dateLeft: Date, dateRight: Date): number {\n    if (this.isValid(dateLeft) && this.isValid(dateRight)) {\n      const dateLeftStartOfDay = this.createDate(\n        this.getYear(dateLeft),\n        this.getMonth(dateLeft),\n        this.getDate(dateLeft)\n      );\n      const dateRightStartOfDay = this.createDate(\n        this.getYear(dateRight),\n        this.getMonth(dateRight),\n        this.getDate(dateRight)\n      );\n\n      const timeStampLeft =\n        this.getTime(dateLeftStartOfDay) -\n        dateLeftStartOfDay.getTimezoneOffset() * this.milliseondsInMinute;\n      const timeStampRight =\n        this.getTime(dateRightStartOfDay) -\n        dateRightStartOfDay.getTimezoneOffset() * this.milliseondsInMinute;\n      return Math.round((timeStampLeft - timeStampRight) / this.millisecondsInDay);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  override deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        const date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(\n    year: number,\n    month: number,\n    date: number,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n    ms = 0\n  ) {\n    const result = new Date(year, month, date, hours, minutes, seconds, ms);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\n    const d = new Date(\n      Date.UTC(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds(),\n        date.getMilliseconds()\n      )\n    );\n    return dtf.format(d);\n  }\n}\n","import { OwlDateTimeFormats } from '../date-time-format.class';\n\nexport const OWL_NATIVE_DATE_TIME_FORMATS: OwlDateTimeFormats = {\n  parse: {\n    dateTimeInput: null\n  },\n  display: {\n    fullInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n    },\n    dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n    timeInput: { hour: 'numeric', minute: 'numeric' },\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' }\n  }\n};\n","import { NgModule } from '@angular/core';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { DateTimeAdapter } from '../date-time-adapter.class';\nimport { NativeDateTimeAdapter } from './native-date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS } from '../date-time-format.class';\nimport { OWL_NATIVE_DATE_TIME_FORMATS } from './native-date-time-format.class';\n\n@NgModule({\n  imports: [PlatformModule],\n  providers: [{ provide: DateTimeAdapter, useClass: NativeDateTimeAdapter }]\n})\nexport class NativeDateTimeModule {}\n\n@NgModule({\n  imports: [NativeDateTimeModule],\n  providers: [\n    {\n      provide: OWL_DATE_TIME_FORMATS,\n      useValue: OWL_NATIVE_DATE_TIME_FORMATS\n    }\n  ]\n})\nexport class OwlNativeDateTimeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["observableOf","OWL_DATETIME_VALUE_ACCESSOR"],"mappings":"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"}